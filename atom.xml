<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Han&#39;s Blog</title>
  
  <subtitle>我思故我在</subtitle>
  <link href="http://blog.better2020.top/atom.xml" rel="self"/>
  
  <link href="http://blog.better2020.top/"/>
  <updated>2022-04-11T00:45:58.734Z</updated>
  <id>http://blog.better2020.top/</id>
  
  <author>
    <name>憨憨一个</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue显示输入框并自动聚焦</title>
    <link href="http://blog.better2020.top/2022/04/08/vue%E6%98%BE%E7%A4%BA%E8%BE%93%E5%85%A5%E6%A1%86%E5%B9%B6%E8%87%AA%E5%8A%A8%E8%81%9A%E7%84%A6/"/>
    <id>http://blog.better2020.top/2022/04/08/vue%E6%98%BE%E7%A4%BA%E8%BE%93%E5%85%A5%E6%A1%86%E5%B9%B6%E8%87%AA%E5%8A%A8%E8%81%9A%E7%84%A6/</id>
    <published>2022-04-08T05:18:23.000Z</published>
    <updated>2022-04-11T00:45:58.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在做todolist增删改查中的“改”的适合遇到一个问题：<br>点击修改内容时，显示输入框并自动聚焦，点击内容以外的地方隐藏输入框，改为div、<br>对于jquery比较简单，顺着点击元素找到input框就ok，但是vue里面还真是没有想到什么解决方法</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>自定义指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-col :span&#x3D;&quot;12&quot;&gt;</span><br><span class="line">  &lt;div v-show&#x3D;&quot;!item.isEditing&quot; @click&#x3D;&quot;editTodo(item,$event)&quot;&gt;&#123;&#123;item.text&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-show&#x3D;&quot;item.isEditing||false&quot;&gt;</span><br><span class="line">      &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;item.text&quot;  @blur&#x3D;&quot;leaveEditTodo(item)&quot;  v-focus&#x3D;&quot;item.isEditing&quot;&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;el-col&gt;</span><br><span class="line"></span><br><span class="line">directives:&#123;</span><br><span class="line">    focus:&#123;</span><br><span class="line">      update:function (el,&#123;value&#125;) &#123;  </span><br><span class="line">        if(value)&#123;</span><br><span class="line">          el.focus()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在做todolist增删改查中的“改”的适合遇到一个问题：&lt;br&gt;点击修改内容时，显示输入框并自动聚焦，点击内容以外的地方隐</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
    <category term="开发问题" scheme="http://blog.better2020.top/tags/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>http那点事</title>
    <link href="http://blog.better2020.top/2022/03/01/http%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>http://blog.better2020.top/2022/03/01/http%E9%82%A3%E7%82%B9%E4%BA%8B/</id>
    <published>2022-03-01T05:21:10.000Z</published>
    <updated>2022-04-13T05:42:05.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于http总是一知半解，看了就忘，可能是平常用到的比较少，这次通过一些常见的问题来补一补这块的知识。<br>系统了解推荐看书《图解http》</p><h2 id="一个页面从输入URL到页面显示加载完成，这个过程都发生了什么"><a href="#一个页面从输入URL到页面显示加载完成，这个过程都发生了什么" class="headerlink" title="一个页面从输入URL到页面显示加载完成，这个过程都发生了什么"></a>一个页面从输入URL到页面显示加载完成，这个过程都发生了什么</h2><p>应该是当之无愧的面试高频问题吧,其中涉及的知识点其实很多<a href="https://segmentfault.com/a/1190000006879700">参考文章</a></p><ol><li>DNS解析</li><li>建立TCP连接</li><li>发送HTTP请求</li><li>服务器处理请求并返回HTTP报文</li><li>浏览器解析页面</li><li>连接结束</li></ol><h3 id="1-DNS解析涉及知识点"><a href="#1-DNS解析涉及知识点" class="headerlink" title="1.DNS解析涉及知识点"></a>1.DNS解析涉及知识点</h3><p>实现域名到IP地址的转换<br>例子：查询<a href="http://www.google.com的ip地址/">www.google.com的IP地址</a><br>查询过程 .=&gt; .com =&gt; google.com =&gt; <a href="http://www.google.com/">www.google.com</a></p><p>DNS优化</p><ul><li>DNS缓存<br>DNS缓存（浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓存）</li><li>DNS负载均衡（DNS重定向）<br>选择合适的服务器返回给用户</li></ul><h3 id="2-TCP连接"><a href="#2-TCP连接" class="headerlink" title="2.TCP连接"></a>2.TCP连接</h3><p>HTTPS协议（HTTP+SSL/TLS）<br>HTTP报文是包裹在TCP报文中发送的，服务端收到TCP报文时会提取出HTTP报文，但因为HTTP报文是明文的，存在安全隐患，所以产生了HTTPS<br>即在HTTP报文包裹进TCP报文中之前使用SSL/TLS进行加密，层级上位于HTTP协议和TCP之间</p><p>HTTPS过程<br>HTTPS在传输数据之前需要客户端和服务器进行一个握手（TLS/SSL握手），在握手过程中将确认双方的加密密码信息。TLS/SSL使用了非对称加密，对称加密，hash等。<br>HTTPS相对HTTP，增加了安全性，但同时也带来了一定时间上的损耗。</p><h3 id="3-HTTP请求"><a href="#3-HTTP请求" class="headerlink" title="3.HTTP请求"></a>3.HTTP请求</h3><p>发送HTTP请求的过程其实就是构建HTTP报文并通过TCP协议发送到服务器指定的端口（http协议80/8080，HTTPS协议443）.<br>HTTP请求报文包括三个部分：请求行 请求报头 请求正文</p><ol><li>请求行<br>格式如下：<blockquote><p>Method Request-URL HTTP-Version CRLF<br>eg: GET index.html HTTP/1.1</p></blockquote></li></ol><p>常用的方法有：GET POST PUT DELETE OPTIONS HEAD</p><ol start="2"><li><p>请求报头<br>常见的请求报头有: Accept, Accept-Charset, Accept-Encoding, Accept-Language, Content-Type, Authorization, Cookie, User-Agent等。</p></li><li><p>请求正文<br>当使用POST, PUT等方法时，通常需要客户端向服务器传递数据。这些数据就储存在请求正文中。在请求包头中有一些与请求正文相关的信息，例如: 现在的Web应用通常采用Rest架构，请求的数据格式一般为json。这时就需要设置Content-Type: application/json</p></li></ol><h2 id="HTTP和HTTPS的区别"><a href="#HTTP和HTTPS的区别" class="headerlink" title="HTTP和HTTPS的区别"></a>HTTP和HTTPS的区别</h2><p>1.端口<br>    HTTP:80<br>    HTTPS:443<br>2.http不加密，https加密报文<br>3.http无连接，https握手阶段较为费时<br>4.https需要ca证书</p><h2 id="常见的HTTP状态码"><a href="#常见的HTTP状态码" class="headerlink" title="常见的HTTP状态码"></a>常见的HTTP状态码</h2><p>[参考文章]（<a href="https://seo.juziseo.com/doc/http_code/%EF%BC%89">https://seo.juziseo.com/doc/http_code/）</a><br>这一组状态码表明这是一个临时性响应。此响应仅由状态行和可选的HTTP头组成，以一个空行结尾。由于HTTP／1.0未定义任何1xx状态码，所以不要向HTTP／1.0客户端发送1xx响应。</p><ul><li><p>1xx  请求信息</p><ul><li>100 Continue</li><li>101 Switching protocols</li><li>102 Processing</li></ul></li><li><p>2xx  接收成功</p><ul><li>这一组状态码表明客户端的请求已经被服务器端成功接收并正确解析。</li></ul></li><li><p>3xx  重定向</p><ul><li>这一组状态码表示客户端需要采取更进一步的行动来完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的Location域中指明。</li></ul></li><li><p>4xx  客户器错误</p></li><li><p>5xx  服务器错误</p></li></ul><h3 id="301和302有什么区别"><a href="#301和302有什么区别" class="headerlink" title="301和302有什么区别"></a>301和302有什么区别</h3><p>301 Moved Permanently  永久重定向<br>302 Found   临时重定向<br>　　302重定向只是暂时的重定向，搜索引擎会抓取新的内容而保留旧的地址，因为服务器返回302，所以，搜索搜索引擎认为新的网址是暂时的。<br>　　而301重定向是永久的重定向，搜索引擎在抓取新的内容的同时也将旧的网址替换为了重定向之后的网址。</p><h2 id="HTTP缓存"><a href="#HTTP缓存" class="headerlink" title="HTTP缓存"></a>HTTP缓存</h2><p>304命中缓存</p><ul><li><p>协商缓存<br>ETag  Last-Modified</p></li><li><p>强制缓存<br>过期时间Expires Cache-Control</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;对于http总是一知半解，看了就忘，可能是平常用到的比较少，这次通过一些常见的问题来补一补这块的知识。&lt;br&gt;系统了解推荐看书《图解http</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="http相关" scheme="http://blog.better2020.top/tags/http%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>BFC到底是什么</title>
    <link href="http://blog.better2020.top/2022/02/25/BFC%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/"/>
    <id>http://blog.better2020.top/2022/02/25/BFC%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/</id>
    <published>2022-02-25T08:59:37.000Z</published>
    <updated>2022-03-18T07:26:10.979Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于BFC"><a href="#关于BFC" class="headerlink" title="关于BFC"></a>关于BFC</h2><p>这个问题可以穿插到清除浮动时问。<br>对于BFC，感觉是知其然而不知其所以然，只了解基本概念，比如全称是Block Formatting Context（块格式化上下文），可以清除浮动。<br>却没有详细去了解，今天查看了一下才有一种恍然大悟的感觉</p><p><a href="https://www.cnblogs.com/qs-cnblogs/p/12349887.html">参考博客地址</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">MDN文档地址</a></p><h2 id="BFC的特性"><a href="#BFC的特性" class="headerlink" title="BFC的特性"></a>BFC的特性</h2><p>1、属于同一个BFC的两个相邻容器的上下margin会重叠（重点）<br>2、计算BFC高度时浮动元素也参于计算（重点）<br>3、BFC的区域不会与浮动容器发生重叠（重点）<br>4、BFC内的容器在垂直方向依次排列<br>5、元素的margin-left与其包含块的border-left相接触<br>6、BFC是独立容器，容器内部元素不会影响容器外部元素</p><h2 id="BFC解决了什么问题"><a href="#BFC解决了什么问题" class="headerlink" title="BFC解决了什么问题"></a>BFC解决了什么问题</h2><p>块格式化上下文对浮动定位与清除浮动都很重要。<br>浮动定位和清除浮动时只会应用于同一个BFC内的元素。浮动不会影响其它BFC中元素的布局，而清除浮动只能清除同一BFC中在它前面的元素的浮动。<br>外边距折叠（Margin collapsing）也只会发生在属于同一BFC的块级元素之间。</p><h3 id="1-margin边距重叠"><a href="#1-margin边距重叠" class="headerlink" title="1.margin边距重叠"></a>1.margin边距重叠</h3><p>将他们置于不同的BFC可以解决这个问题</p><h3 id="2-Float脱离文档流高度塌陷"><a href="#2-Float脱离文档流高度塌陷" class="headerlink" title="2.Float脱离文档流高度塌陷"></a>2.Float脱离文档流高度塌陷</h3><p>BFC的特性，上代码看效果</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;index.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outerBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxa float-div&quot;</span>&gt;</span></span><br><span class="line">      boxa</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxb&quot;</span>&gt;</span></span><br><span class="line">      boxb</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outerBox</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxa</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxb</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: bisque;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="comment">/* height: 200px; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.float-div</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>高度塌陷效果图<br><img src="/2022/02/25/BFC%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7.png" alt="高度塌陷"></p><p>outerBox触发BFC</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outerBox</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决高度塌陷效果图<br><img src="/2022/02/25/BFC%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/%E8%A7%A3%E5%86%B3%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7.png" alt="解决高度塌陷"></p><h3 id="3-两栏布局"><a href="#3-两栏布局" class="headerlink" title="3.两栏布局"></a>3.两栏布局</h3><p>接上面boxb触发BFC，boxa和boxb互不影响形成两栏效果</p><p>html同上<br>css如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outerBox</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="comment">/* overflow: hidden; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxa</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxb</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: bisque;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="comment">/* width: 200px; */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="comment">/* display: flex; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.float-div</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BFC的触发条件"><a href="#BFC的触发条件" class="headerlink" title="BFC的触发条件"></a>BFC的触发条件</h2><ul><li>根元素（html）</li><li>浮动元素（元素的 float 不是 none）</li><li>绝对定位元素（元素的 position 为 absolute 或 fixed）</li><li>行内块元素（元素的 display 为 inline-block）</li><li>表格单元格（元素的 display 为 table-cell，HTML表格单元格默认为该值）</li><li>表格标题（元素的 display 为 table-caption，HTML表格标题默认为该值）</li><li>匿名表格单元格元素（元素的 display 为 table、table-row、 table-row-group、table-header-group、table-footer-group（分别是HTML table、row、tbody、thead、tfoot 的默认属性）或 inline-table）</li><li>overflow 计算值(Computed)不为 visible 的块元素</li><li>display 值为 flow-root 的元素</li><li>contain 值为 layout、content 或 paint 的元素</li><li>弹性元素（display 为 flex 或 inline-flex 元素的直接子元素）</li><li>网格元素（display 为 grid 或 inline-grid 元素的直接子元素）</li><li>多列容器（元素的 column-count 或 column-width (en-US) 不为 auto，包括 column-count 为 1）</li><li>column-span 为 all 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中（标准变更，Chrome bug）。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于BFC&quot;&gt;&lt;a href=&quot;#关于BFC&quot; class=&quot;headerlink&quot; title=&quot;关于BFC&quot;&gt;&lt;/a&gt;关于BFC&lt;/h2&gt;&lt;p&gt;这个问题可以穿插到清除浮动时问。&lt;br&gt;对于BFC，感觉是知其然而不知其所以然，只了解基本概念，比如全称是Block</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="HTML" scheme="http://blog.better2020.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>vue瀑布流布局</title>
    <link href="http://blog.better2020.top/2022/01/04/vue%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://blog.better2020.top/2022/01/04/vue%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80/</id>
    <published>2022-01-04T00:54:36.000Z</published>
    <updated>2022-04-15T04:35:52.181Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今天用vue实现瀑布流布局"><a href="#今天用vue实现瀑布流布局" class="headerlink" title="今天用vue实现瀑布流布局"></a>今天用vue实现瀑布流布局</h2><h3 id="介绍一下瀑布流布局"><a href="#介绍一下瀑布流布局" class="headerlink" title="介绍一下瀑布流布局"></a>介绍一下瀑布流布局</h3><p>瀑布流，又称瀑布流式布局。是比较流行的一种网站页面布局，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。最早采用此布局的网站是Pinterest，逐渐在国内流行开来。国内大多数清新站基本为这类风格。</p><h3 id="做个小案例来理解：照片墙"><a href="#做个小案例来理解：照片墙" class="headerlink" title="做个小案例来理解：照片墙"></a>做个小案例来理解：照片墙</h3><h4 id="案例网址-http-travel-better2020-top-dist-profile"><a href="#案例网址-http-travel-better2020-top-dist-profile" class="headerlink" title="案例网址 http://travel.better2020.top/dist/#/profile"></a>案例网址 <a href="http://travel.better2020.top/dist/#/profile">http://travel.better2020.top/dist/#/profile</a></h4><h4 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h4><p>瀑布流布局的特点是等宽不等高。<br>为了让最后一行的差距最小，从第二行开始，需要将图片放在第一行最矮的图片下面，以此类推。<br>实现方式<br>1.css3 column 可直接实现，缺点为图片竖向排列<br>2.绝对定位，通过top和left值来确定元素的位置，假设3列 var arr = [height1,height2,height3]<br>3.flex 弹性布局 每一行为一个容器，每次追加图片到最矮的容器即可<br>2和3的方法很接近，这次我通过3来实现</p><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>1.确定列数<br>    可以通过固定宽度，动态计算列数，也可以确定列数，动态决定宽度</p><p>2.获取数据</p><p>3.渲染至页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">mountMenu</span>(<span class="params">arg</span>)</span> &#123;</span><br><span class="line">  <span class="comment">// console.log(this.dataList.length)</span></span><br><span class="line">  <span class="keyword">var</span> temp = <span class="built_in">this</span>.mainMenuList</span><br><span class="line">  <span class="keyword">var</span> index = arg || <span class="number">0</span></span><br><span class="line">  <span class="keyword">var</span> refName = <span class="built_in">this</span>.selectCol();</span><br><span class="line">  <span class="keyword">var</span> _this =  <span class="built_in">this</span>;</span><br><span class="line">  <span class="keyword">if</span> (temp.length &gt; index) &#123;</span><br><span class="line">    <span class="built_in">this</span>.dataList[refName].push(<span class="built_in">this</span>.mainMenuList[index])</span><br><span class="line">    <span class="built_in">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> newimg = <span class="keyword">new</span> Image();</span><br><span class="line">      newimg.src = <span class="built_in">this</span>.mainMenuList[index].imgUrl;</span><br><span class="line">      <span class="comment">//获取图片高度</span></span><br><span class="line">      newimg.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> scale = newimg.height/newimg.width;</span><br><span class="line">        <span class="keyword">let</span> img = _this.$refs.img[index];</span><br><span class="line">        img.height=img.width*scale;</span><br><span class="line">        _this.lazyloadimg(index)  </span><br><span class="line">        _this.mountMenu(index + <span class="number">1</span>)             </span><br><span class="line">      &#125; </span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>此处注意点：1）每次图片的添加需要等图片加载完成之后才能得到图片的高度，图片加载完成函数img.onload = function(){…}<br>         2)dom更新之后才能继续下一张图片的加载，因为要获取列的高度this.$nextTick<br>4.上完整代码</p><h4 id="template部分，确定图片的布局"><a href="#template部分，确定图片的布局" class="headerlink" title="template部分，确定图片的布局"></a>template部分，确定图片的布局</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;box&quot; ref&#x3D;&quot;box&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;col&quot; :style&#x3D;&quot;colwidth&quot; v-for&#x3D;&quot;(itemdata,name,index) in dataList&quot; :key&#x3D;index  ref&#x3D;&quot;col&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;item border-right border-bottom&quot; v-for&#x3D;&quot;item of itemdata&quot; :key&#x3D;&quot;item.id&quot; &gt;</span><br><span class="line">          &lt;img src&#x3D;&quot;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;img&#x2F;1.jpg&quot; :data-src&#x3D;&quot;item.imgUrl&quot;  ref&#x3D;&quot;img&quot; &gt;</span><br><span class="line">          &lt;div class&#x3D;&quot;title&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">          &lt;slot&gt;&lt;&#x2F;slot&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br></pre></td></tr></table></figure><h4 id="js部分，主要的逻辑实现都在这里，顺带简单实现了一下图片懒加载，即只有元素在可见区域里，才加载图片"><a href="#js部分，主要的逻辑实现都在这里，顺带简单实现了一下图片懒加载，即只有元素在可见区域里，才加载图片" class="headerlink" title="js部分，主要的逻辑实现都在这里，顺带简单实现了一下图片懒加载，即只有元素在可见区域里，才加载图片"></a>js部分，主要的逻辑实现都在这里，顺带简单实现了一下图片懒加载，即只有元素在可见区域里，才加载图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;Waterfall&#x27;</span>,</span><br><span class="line">  props:&#123;</span><br><span class="line">    col:<span class="number">2</span>,<span class="comment">//列数</span></span><br><span class="line">    mainMenuList:<span class="built_in">Array</span><span class="comment">//图片信息</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="comment">// mainMenuList: [],</span></span><br><span class="line">      dataList:&#123;&#125;,</span><br><span class="line">      scrolltime:<span class="literal">null</span></span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line">    <span class="comment">//列宽</span></span><br><span class="line">    colwidth:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        width:(<span class="number">100</span>/<span class="built_in">Object</span>.keys(<span class="built_in">this</span>.dataList).length)+<span class="string">&quot;%&quot;</span>,</span><br><span class="line">        color:<span class="string">&quot;red&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">created</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.initdataList();<span class="comment">//dom挂载</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;scroll&#x27;</span>,<span class="built_in">this</span>.listenScroll, <span class="literal">true</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">//加载数据</span></span><br><span class="line">    <span class="function"><span class="title">mountMenu</span>(<span class="params">arg</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> temp = <span class="built_in">this</span>.mainMenuList</span><br><span class="line">      <span class="keyword">var</span> index = arg || <span class="number">0</span></span><br><span class="line">      <span class="keyword">var</span> refName = <span class="built_in">this</span>.selectCol();</span><br><span class="line">      <span class="keyword">var</span> _this =  <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">if</span> (temp.length &gt; index) &#123;</span><br><span class="line">        <span class="built_in">this</span>.dataList[refName].push(<span class="built_in">this</span>.mainMenuList[index])</span><br><span class="line">        <span class="built_in">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">let</span> newimg = <span class="keyword">new</span> Image();</span><br><span class="line">          newimg.src = <span class="built_in">this</span>.mainMenuList[index].imgUrl;</span><br><span class="line">          newimg.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">let</span> scale = newimg.height/newimg.width;</span><br><span class="line">            <span class="keyword">let</span> img = _this.$refs.img[index];</span><br><span class="line">            img.height=img.width*scale;</span><br><span class="line">            _this.lazyloadimg(index); </span><br><span class="line">            _this.mountMenu(index + <span class="number">1</span>);             </span><br><span class="line">          &#125; </span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//选择高度最矮的列</span></span><br><span class="line">    <span class="function"><span class="title">selectCol</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> cols = <span class="built_in">this</span>.$refs.col;<span class="comment">//所有列</span></span><br><span class="line">      <span class="keyword">let</span> lowcol=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">let</span> lowheight = cols[lowcol].offsetHeight;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index&lt;<span class="built_in">this</span>.col; index++) &#123;</span><br><span class="line">        <span class="keyword">let</span> item = cols[index];</span><br><span class="line">        <span class="keyword">let</span> itemheight = item.offsetHeight;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">lowheight &gt;= itemheight</span>)</span>&#123;</span><br><span class="line">          lowheight = itemheight;</span><br><span class="line">          lowcol = index;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> lowcol;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//图片懒加载，只显示当前页面的image</span></span><br><span class="line">    <span class="function"><span class="title">lazyloadimg</span>(<span class="params">index</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> scrollT = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</span><br><span class="line">      <span class="keyword">let</span> winH = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line">      <span class="keyword">let</span> elem = <span class="built_in">this</span>.$refs.img[index];</span><br><span class="line">      <span class="function"><span class="title">if</span>(<span class="params">elem == <span class="literal">undefined</span></span>)</span>&#123;<span class="keyword">return</span>&#125;</span><br><span class="line">      <span class="keyword">let</span> elemposition  = elem.getBoundingClientRect();</span><br><span class="line">      <span class="keyword">let</span> elemTop = elemposition.top;</span><br><span class="line">      <span class="keyword">let</span> elemBot = elemposition.bottom;</span><br><span class="line">      <span class="keyword">if</span>(elem.dataset.src&amp;&amp;((elemTop&gt;<span class="number">0</span> &amp;&amp; elemTop&lt;winH)||(elemBot&gt;<span class="number">0</span> &amp;&amp; elemBot&lt;winH)))&#123;</span><br><span class="line">        elem.src = elem.dataset.src;</span><br><span class="line">        elem.dataset.src = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//将dom挂载到Vue实例，不然后续插入元素页面不会改变</span></span><br><span class="line">    <span class="function"><span class="title">initdataList</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="function"><span class="title">for</span>(<span class="params"><span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="built_in">this</span>.col;i++</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.$set(<span class="built_in">this</span>.dataList,i,[])</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//监听页面滚动，防抖</span></span><br><span class="line">    <span class="function"><span class="title">listenScroll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// console.log(&quot;scroll&quot;)</span></span><br><span class="line">      <span class="built_in">clearTimeout</span>(<span class="built_in">this</span>.scrolltime);</span><br><span class="line">      <span class="built_in">this</span>.scrolltime = <span class="built_in">setTimeout</span>(<span class="built_in">this</span>.handleScroll,<span class="number">200</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//处理页面滚动</span></span><br><span class="line">    <span class="function"><span class="title">handleScroll</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">let</span> length = <span class="number">0</span>;</span><br><span class="line">      <span class="function"><span class="title">while</span>(<span class="params">length&lt;<span class="built_in">this</span>.mainMenuList.length</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.lazyloadimg(length);</span><br><span class="line">        length ++;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="css部分"><a href="#css部分" class="headerlink" title="css部分"></a>css部分</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">*</span><br><span class="line">  <span class="selector-tag">box-sizing</span> <span class="selector-tag">border-box</span></span><br><span class="line"><span class="selector-class">.box</span></span><br><span class="line">  <span class="selector-tag">width</span> 100%</span><br><span class="line">  <span class="selector-tag">display</span> <span class="selector-tag">flex</span></span><br><span class="line">  <span class="selector-tag">align-items</span> <span class="selector-tag">flex-start</span></span><br><span class="line"><span class="selector-class">.col</span> <span class="selector-tag">img</span></span><br><span class="line">  <span class="selector-tag">width</span> 100%</span><br><span class="line">  <span class="selector-tag">padding</span> <span class="selector-class">.1rem</span></span><br><span class="line"><span class="selector-class">.item</span> <span class="selector-class">.title</span></span><br><span class="line">  <span class="selector-tag">text-align</span> <span class="selector-tag">center</span></span><br><span class="line">  <span class="selector-tag">line-height</span> <span class="selector-class">.5rem</span></span><br><span class="line"><span class="selector-class">.border-right</span>,<span class="selector-class">.border-bottom</span></span><br><span class="line">  <span class="selector-tag">border</span> 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ddd</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="图片数据"><a href="#图片数据" class="headerlink" title="图片数据"></a>图片数据</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;ret&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: [&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">32</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片32&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">33</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fcdn.duitang.com%2Fuploads%2Fitem%2F201407%2F20%2F20140720141804_j2zi5.thumb.700_0.jpeg&amp;refer=http%3A%2F%2Fcdn.duitang.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222627&amp;t=77f7308f43c26e272857fed6549fb3bb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片33&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">35</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20180629%2F0c07976d1c4942009eee1c95a5cec5f6.jpeg&amp;refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222627&amp;t=8b5054e5614268f4381436a7c6755aed&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">36</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic1.zhimg.com%2Fv2-23ef0ef1a833415e276b057a7c718371_r.jpg%3Fsource%3D1940ef5c&amp;refer=http%3A%2F%2Fpic1.zhimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222627&amp;t=ae7d428e51e81b1e1e7788b4c092b034&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">3</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">4</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">6</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">7</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">8</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">9</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">10</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">11</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">12</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">13</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">14</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">15</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">16</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">17</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">18</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">19</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">20</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">21</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">22</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">23</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">24</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">25</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">26</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">27</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/7af40ad162d9f2d32ec6b91facec8a136227cc6f.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">28</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fcdn.duitang.com%2Fuploads%2Fblog%2F201306%2F19%2F20130619130519_rPMZr.thumb.700_0.jpeg&amp;refer=http%3A%2F%2Fcdn.duitang.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222566&amp;t=e08da9372f706f46c272a432641fd3eb&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">29</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://ss1.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/7af40ad162d9f2d32ec6b91facec8a136227cc6f.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片29&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;衣服&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">30</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fbbsfiles.vivo.com.cn%2Fvivobbs%2Fattachment%2Fforum%2F201806%2F06%2F211948u71hl59993sw560s.jpg&amp;refer=http%3A%2F%2Fbbsfiles.vivo.com.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222627&amp;t=8105c099c2d014ff9b67b0f545848357&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片30&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">31</span>,</span><br><span class="line">        <span class="attr">&quot;imgUrl&quot;</span>: <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fbbsfiles.vivo.com.cn%2Fvivobbs%2Fattachment%2Fforum%2F201806%2F06%2F211948u71hl59993sw560s.jpg&amp;refer=http%3A%2F%2Fbbsfiles.vivo.com.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1630222627&amp;t=8105c099c2d014ff9b67b0f545848357&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>:<span class="string">&quot;图片31&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;desc&quot;</span>:<span class="string">&quot;壁纸&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;今天用vue实现瀑布流布局&quot;&gt;&lt;a href=&quot;#今天用vue实现瀑布流布局&quot; class=&quot;headerlink&quot; title=&quot;今天用vue实现瀑布流布局&quot;&gt;&lt;/a&gt;今天用vue实现瀑布流布局&lt;/h2&gt;&lt;h3 id=&quot;介绍一下瀑布流布局&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>域名关联GitHub Page</title>
    <link href="http://blog.better2020.top/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/"/>
    <id>http://blog.better2020.top/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/</id>
    <published>2021-12-19T02:40:33.000Z</published>
    <updated>2022-04-15T04:36:22.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>github Pages提供了外界访问的入口，让自己的项目可以被别人看见，但是网址不简洁，我想拥有自己的网址。<br>之前已经购买过域名并且根据别人的博客教程的顺利的和github page关联上了，但是我的域名没续费过期了，今天想起再买回来，顺带记录其中步骤。</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>1.简单点直接选阿里云，登录后（之前注册过，注册步骤省略）搜索域名即可，不然真不好找<br>附图<img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/01.png" alt="登录搜索域名"><br>2.输入自己想要的域名加购购买…此处跟购物一样省略<br>3.购买成功后可进入”管理我的域名”，请注意域名状态，可能会是审核中，审核完成后配置的域名解析才会生效<br>  <img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/02.png" alt="域名管理入口"><br>4.添加域名解析（重要）<br>  <img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/03.png" alt="添加域名解析"><br>  <img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/04.png" alt="添加域名解析"><br>使用新手引导将github page IP地址填进去就ok啦<br>例如我的page地址为liujiaoy.Github.io<br>win+R cmd ping liujiaoy.Github.io之后可以得到IP地址<br>  <img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/05.png" alt="获取ip地址"></p><h2 id="github添加关联"><a href="#github添加关联" class="headerlink" title="github添加关联"></a>github添加关联</h2><p>在github page项目中添加CNAME文件，文件中填入自己的域名<br><img src="/2021/12/19/%E5%9F%9F%E5%90%8D%E5%85%B3%E8%81%94githubpage/06.png" alt="CNAME关联"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;github Pages提供了外界访问的入口，让自己的项目可以被别人看见，但是网址不简洁，我想拥有自己的网址。&lt;br&gt;之前已经购买过域名并且</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="Git" scheme="http://blog.better2020.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>vue/vuecli4搭建新项目，并引入element</title>
    <link href="http://blog.better2020.top/2021/10/09/vue-vuecli4%E6%90%AD%E5%BB%BA%E6%96%B0%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%B9%B6%E5%BC%95%E5%85%A5element/"/>
    <id>http://blog.better2020.top/2021/10/09/vue-vuecli4%E6%90%AD%E5%BB%BA%E6%96%B0%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%B9%B6%E5%BC%95%E5%85%A5element/</id>
    <published>2021-10-09T05:13:05.000Z</published>
    <updated>2022-03-16T09:21:03.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、vue-create-my-projectname"><a href="#一、vue-create-my-projectname" class="headerlink" title="一、vue create my-projectname"></a>一、vue create my-projectname</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create my-projectname</span><br></pre></td></tr></table></figure><img src="/2021/10/09/vue-vuecli4%E6%90%AD%E5%BB%BA%E6%96%B0%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%B9%B6%E5%BC%95%E5%85%A5element/1.png" alt="创建项目选择配置" width="500">这边可以直接选择默认的配置，我选择了最后一个自己配置sass，babel，route，vuex，eslint<h2 id="二、添加element"><a href="#二、添加element" class="headerlink" title="二、添加element"></a>二、添加element</h2><p>element 官网(<a href="https://element.eleme.cn/#/zh-CN/component/quickstart">https://element.eleme.cn/#/zh-CN/component/quickstart</a>)</p><p>这里值得注意！！vue@cli4直接一行命令搞定按需引入</p><blockquote><p>vue add element</p></blockquote><p>这样项目文件中多了如图所示的plugin文件夹，里面的element.js中用于添加你需要引入的element模块。<br>main.js已经自行引入了此文件，接下来只需要使用即可</p><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>之前根据element文档后面的按需引入来进行操作，发现找不到 babelrc文件，原来现在变成了babel.config.js,<br>而且只需要一行命令就完美配置，真的牛</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、vue-create-my-projectname&quot;&gt;&lt;a href=&quot;#一、vue-create-my-projectname&quot; class=&quot;headerlink&quot; title=&quot;一、vue create my-projectname&quot;&gt;&lt;/a&gt;一、vue</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
    <category term="element" scheme="http://blog.better2020.top/tags/element/"/>
    
  </entry>
  
  <entry>
    <title>vue生命周期</title>
    <link href="http://blog.better2020.top/2021/09/02/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://blog.better2020.top/2021/09/02/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</id>
    <published>2021-09-02T08:36:21.000Z</published>
    <updated>2022-03-16T09:21:03.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，这是一道被问频率很高的面试题，其次，他的使用频率也很高，不了解清楚容易踩坑。</p><h2 id="生命周期图示"><a href="#生命周期图示" class="headerlink" title="生命周期图示"></a>生命周期图示</h2><p>vue官网的图,配合下面的解释食用风味更佳</p><img src="/2021/09/02/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/lifecycle.png" alt="vue生命周期" width="500"><h2 id="生命周期钩子及使用场景"><a href="#生命周期钩子及使用场景" class="headerlink" title="生命周期钩子及使用场景"></a>生命周期钩子及使用场景</h2><h3 id="BeforeCreate"><a href="#BeforeCreate" class="headerlink" title="BeforeCreate"></a>BeforeCreate</h3><p>在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。</p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>此时连数据都没有，只能放些无关痛痒的操作，比如loadding</p><h3 id="Created"><a href="#Created" class="headerlink" title="Created"></a>Created</h3><p>在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)，property 和方法的运算，watch/event 事件回调。然而，挂载阶段还没开始，$el property 目前尚不可用。</p><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>data里面的数据有了，一般可以进行ajax请求了，但如果要用到页面dom的请求就还不能用</p><h3 id="BeforeMount"><a href="#BeforeMount" class="headerlink" title="BeforeMount"></a>BeforeMount</h3><p>在挂载开始之前被调用：相关的 render 函数首次被调用。<br>该钩子在服务器端渲染期间不被调用。</p><h3 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h3><p>很少，或许可以修改render?</p><h3 id="Mounted"><a href="#Mounted" class="headerlink" title="Mounted"></a>Mounted</h3><p>实例被挂载后调用，这时 el 被新创建的 vm.$el 替换了。如果根实例挂载到了一个文档内的元素上，当 mounted 被调用时 vm.$el 也在文档内。<br>注意 mounted 不会保证所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以在 mounted 内部使用 vm.$nextTick：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mounted: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.$nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Code that will run only after the</span></span><br><span class="line">    <span class="comment">// entire view has been rendered</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该钩子在服务器端渲染期间不被调用。</p><h3 id="使用场景-3"><a href="#使用场景-3" class="headerlink" title="使用场景"></a>使用场景</h3><p>父子间的通信<br>修改数据会触发 beforeUpdate,Updated钩子函数</p><h3 id="BeforeUpdate"><a href="#BeforeUpdate" class="headerlink" title="BeforeUpdate"></a>BeforeUpdate</h3><p>数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。<br>该钩子在服务器端渲染期间不被调用，因为只有初次渲染会在服务端进行。</p><h3 id="使用场景-4"><a href="#使用场景-4" class="headerlink" title="使用场景"></a>使用场景</h3><p>弹出确定要修改吗？</p><h3 id="Updated"><a href="#Updated" class="headerlink" title="Updated"></a>Updated</h3><p>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。</p><p>当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之。</p><p>注意 updated 不会保证所有的子组件也都一起被重绘。如果你希望等到整个视图都重绘完毕，可以在 updated 里使用 vm.$nextTick：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">updated: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.$nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Code that will run only after the</span></span><br><span class="line">    <span class="comment">// entire view has been re-rendered</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该钩子在服务器端渲染期间不被调用。</p><h3 id="使用场景-5"><a href="#使用场景-5" class="headerlink" title="使用场景"></a>使用场景</h3><h3 id="BeforeDestory"><a href="#BeforeDestory" class="headerlink" title="BeforeDestory"></a>BeforeDestory</h3><p>实例销毁之前调用。在这一步，实例仍然完全可用。<br>该钩子在服务器端渲染期间不被调用。</p><h3 id="使用场景-6"><a href="#使用场景-6" class="headerlink" title="使用场景"></a>使用场景</h3><p>离开页面前的行为<br>简单来说，就是一些你写 定时器/全局监听 事件，如果没有被销毁的话，会一直存在当前项目所有的生命周期中。<br>单纯的销毁组件并不会销毁定时器/监听事件，最终可能会影响页面出现卡顿或者 data 一直被反复修改。<br>所以需要在组件销毁时去清理这些东西</p><p>应用场景： 比如用户在提交form表单时，在内容填写 到 提交表单过程中，有后退或其他操作时可以在这个钩子提示内容尚未提交或保存，是否退出之类的</p><h3 id="Destoryed"><a href="#Destoryed" class="headerlink" title="Destoryed"></a>Destoryed</h3><p>实例销毁后调用。该钩子被调用后，对应 Vue 实例的所有指令都被解绑，所有的事件监听器被移除，所有的子实例也都被销毁。<br>该钩子在服务器端渲染期间不被调用。</p><h3 id="使用场景-7"><a href="#使用场景-7" class="headerlink" title="使用场景"></a>使用场景</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;首先，这是一道被问频率很高的面试题，其次，他的使用频率也很高，不了解清楚容易踩坑。&lt;/p&gt;
&lt;h2 id=&quot;生命周期图示&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>markdown写简历并转成pdf</title>
    <link href="http://blog.better2020.top/2021/08/31/%E4%BD%BF%E7%94%A8markdown%E5%86%99%E7%AE%80%E5%8E%86%E5%B9%B6%E8%BD%AC%E6%88%90pdf/"/>
    <id>http://blog.better2020.top/2021/08/31/%E4%BD%BF%E7%94%A8markdown%E5%86%99%E7%AE%80%E5%8E%86%E5%B9%B6%E8%BD%AC%E6%88%90pdf/</id>
    <published>2021-08-31T06:13:16.000Z</published>
    <updated>2022-03-16T09:21:04.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本来想写个个人简历网站，但是没有好的想法，做出来也就是写见不得人的烂尾工程，还是简单点好，最后选择使用md简历</p><h2 id="markdown写简历"><a href="#markdown写简历" class="headerlink" title="markdown写简历"></a>markdown写简历</h2><p>这个markdown基础语法在之前的博客里面有讲到，今天就略过了。<br>主要内容也就是个人信息，工作经历，项目经验</p><h2 id="md文档转pdf"><a href="#md文档转pdf" class="headerlink" title="md文档转pdf"></a>md文档转pdf</h2><h3 id="转换插件Markdown-PDF"><a href="#转换插件Markdown-PDF" class="headerlink" title="转换插件Markdown PDF"></a>转换插件Markdown PDF</h3><p>我用的是VSCode编辑器 插件 Markdown PDF</p><p><img src="/2021/08/31/%E4%BD%BF%E7%94%A8markdown%E5%86%99%E7%AE%80%E5%8E%86%E5%B9%B6%E8%BD%AC%E6%88%90pdf/top_img.png" alt="Markdown PDF"></p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>Fn1 调出vscode命令窗口，输入markdown即可出现相关命令，可以转成pdf或者其他类型<br><img src="/2021/08/31/%E4%BD%BF%E7%94%A8markdown%E5%86%99%E7%AE%80%E5%8E%86%E5%B9%B6%E8%BD%AC%E6%88%90pdf/use.png" alt="use"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;本来想写个个人简历网站，但是没有好的想法，做出来也就是写见不得人的烂尾工程，还是简单点好，最后选择使用md简历&lt;/p&gt;
&lt;h2 id=&quot;ma</summary>
      
    
    
    
    
    <category term="个人简历" scheme="http://blog.better2020.top/tags/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>JS基础题</title>
    <link href="http://blog.better2020.top/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJS/"/>
    <id>http://blog.better2020.top/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJS/</id>
    <published>2021-08-27T06:19:17.000Z</published>
    <updated>2022-04-15T04:15:33.074Z</updated>
    
    <content type="html"><![CDATA[<p>掘金文章原文<a href="https://juejin.cn/post/7016593221815910408">连八股文都不懂还指望在前端混下去么</a></p><h2 id="js数据类型"><a href="#js数据类型" class="headerlink" title="js数据类型"></a>js数据类型</h2><p>7 大数据类型</p><ul><li>Number (数字)</li><li>String (字符串)</li><li>Boolean (布尔)</li><li>Symbol (符号)</li><li>Object (对象)<ul><li>function (函数)</li><li>Array (数组)</li><li>Date (日期)</li><li>RegExp (正则表达式)</li></ul></li><li>Null (空)</li><li>Undefined (未定义)</li></ul><p>五种基本数据类型 Number,Null,Undefined,Boolean,String<br>一种复杂数据类型 Object<br>es6 新加入 symbol</p><h2 id="null与undefined"><a href="#null与undefined" class="headerlink" title="null与undefined"></a>null与undefined</h2><p>undefined表示一个变量自然的，最原始的状态值，而null则表示一个变量人为的设置为空对象。<br>出现undefined的情况</p><ul><li>声明了变量但未赋值</li><li>访问对象上不存在的属性或未定义的变量</li><li>函数定义了形参，但没有传递实参</li></ul><p>null<br>基本都是手动置为null</p><p>Number(null)//0<br>Number(undefined)//NaN</p><h2 id="判断数据类型的方法"><a href="#判断数据类型的方法" class="headerlink" title="判断数据类型的方法"></a>判断数据类型的方法</h2><h3 id="一、typeof"><a href="#一、typeof" class="headerlink" title="一、typeof"></a>一、typeof</h3><ul><li>优点：能够快速区分基本数据类型 </li><li>缺点：不能将Object、Array和Null区分，都返回object</li><li>注意！ typeof(null)//object 但typeof 可以检测function</li></ul><h3 id="二、instanceof"><a href="#二、instanceof" class="headerlink" title="二、instanceof"></a>二、instanceof</h3><p>可进一步区分object为对象还是数组还是函数</p><ul><li>优点：能够区分Array、Object和Function，适合用于判断自定义的类实例对象 </li><li>缺点：Number，Boolean，String基本数据类型不能判断</li></ul><h3 id="三、Object-prototype-toString-call"><a href="#三、Object-prototype-toString-call" class="headerlink" title="三、Object.prototype.toString.call()"></a>三、Object.prototype.toString.call()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> toString = <span class="built_in">Object</span>.prototype.toString;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="number">1</span>));                      <span class="comment">//[object Number]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">true</span>));                   <span class="comment">//[object Boolean]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="string">&#x27;abc&#x27;</span>));                  <span class="comment">//[object String]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call([]));                     <span class="comment">//[object Array]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(&#123;&#125;));                     <span class="comment">//[object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;));           <span class="comment">//[object Function]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">undefined</span>));              <span class="comment">//[object Undefined]</span></span><br><span class="line"><span class="built_in">console</span>.log(toString.call(<span class="literal">null</span>));                   <span class="comment">//[object Null]</span></span><br></pre></td></tr></table></figure><ul><li>优点：精准判断数据类型 </li><li>缺点：写法繁琐不容易记，推荐进行封装后使用<br><b>为什么可以这么干？</b><br>Number Boolean String这些类型原型也指向Object,可以调用它上面的toString<br><b>那为什么要用prototype再call一下呢？</b><br>因为其实Number String之类的已经重写过了toString方法</li></ul><h2 id="原生ajax"><a href="#原生ajax" class="headerlink" title="原生ajax"></a>原生ajax</h2><p>其实很简单<br>1.创建xhr(xmlhttprequest)对象<br>2.请求参数，url ，类型，参数等<br>3.发送请求<br>4.监听回调xhr.onreadystate change,说明请求完成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//步骤一:创建异步对象</span></span><br><span class="line"><span class="keyword">var</span> ajax = <span class="keyword">new</span> XMLHttpRequest();<span class="comment">//核心</span></span><br><span class="line"><span class="comment">//步骤二:设置请求的url参数,参数一是请求的类型,参数二是请求的url,可以带参数,动态的传递参数starName到服务端</span></span><br><span class="line">ajax.open(<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;getStar.php?starName=&#x27;</span>+name);</span><br><span class="line"><span class="comment">//如果是post必须设置请求头</span></span><br><span class="line">ajax.open(<span class="string">&#x27;post&#x27;</span>,url,<span class="keyword">async</span>)</span><br><span class="line">ajax.setRequestHead(header,value)</span><br><span class="line"><span class="comment">//步骤三:发送请求</span></span><br><span class="line">ajax.send();</span><br><span class="line"><span class="comment">//步骤四:注册事件 onreadystatechange 状态改变就会调用</span></span><br><span class="line">ajax.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;   <span class="keyword">if</span> (ajax.readyState==<span class="number">4</span> &amp;&amp;ajax.status==<span class="number">200</span>) &#123;</span><br><span class="line">    <span class="comment">//步骤五 如果能够进到这个判断 说明 数据 完美的回来了,并且请求的页面是存在的　　　　console.log(ajax.responseText);//输入相应的内容  　　&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象深浅拷贝"><a href="#对象深浅拷贝" class="headerlink" title="对象深浅拷贝"></a>对象深浅拷贝</h2><h3 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h3><p>一.object.assign(target,souce)//Object.assign({},{a:1,b:2})</p><p>二.手动实现<br>自己实现也很简单，就一个for循环进行赋值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">simpleClone</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        result[i] = obj[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h3><p>一.json.parse(json.stringfy(obj))<br>缺点：<br>（1）如果对象里有函数,函数无法被拷贝下来<br>（2）无法拷贝Obj对象原型链上的属性和方法<br>（3）当数据的层次很深，会栈溢出<br>二.手动实现<br>也没想象中难，就用递归把所有属性都复制下来,但是其中有比较多的细节可以注意</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepClone</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params"><span class="keyword">typeof</span> obj[i] === <span class="string">&quot;object&quot;</span></span>)</span>&#123;</span><br><span class="line">             result[i] = deepClone(obj[i])</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result[i] = obj[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopyTwo</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> objClone = <span class="built_in">Array</span>.isArray(obj) ? [] : &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span> (obj &amp;&amp; <span class="keyword">typeof</span> obj == <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="comment">//判断obj子元素是否为对象，如果是，递归复制</span></span><br><span class="line">            <span class="keyword">if</span> (obj[key] &amp;&amp; <span class="keyword">typeof</span> obj[key] === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">                objClone[key] = deepCopyTwo(obj[key]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果不是，简单复制</span></span><br><span class="line">                objClone[key] = obj[key];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> objClone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里只是最初步的实现，更加完善的参考这篇文章<a href="https://juejin.cn/post/6844903929705136141">如何写出一个惊艳面试官的深拷贝?</a>,考察了更多的知识点</p><h2 id="this指向问题"><a href="#this指向问题" class="headerlink" title="this指向问题"></a>this指向问题</h2><!-- - this指的是函数运行时所在的环境 --><ul><li>this指向-记住一句话：谁调用，指向谁<br>如果用其他方法记的话记优先级</li><li>1.箭头函数</li><li>2.new</li><li>3.apply,call</li><li>4.obj.</li><li>5.隐式绑定默认指向window</li></ul><p>下面来做几道题理解<br>第一道</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">this</span>.bar); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">var</span> bar = <span class="string">&quot;bar1&quot;</span>; </span><br><span class="line"><span class="keyword">var</span> o2 = &#123;<span class="attr">bar</span>: <span class="string">&quot;bar2&quot;</span>, <span class="attr">foo</span>: foo&#125;; </span><br><span class="line"><span class="keyword">var</span> o3 = &#123;<span class="attr">bar</span>: <span class="string">&quot;bar3&quot;</span>, <span class="attr">foo</span>: foo&#125;; </span><br><span class="line"></span><br><span class="line">foo();   <span class="comment">//  &quot;bar1&quot;;  window.foo()       </span></span><br><span class="line">o2.foo();   <span class="comment">//&quot;bar2&quot;       </span></span><br><span class="line">foo.call(o3);  <span class="comment">//&quot;bar3&quot; 改变this指向o3</span></span><br></pre></td></tr></table></figure><p>第二道</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;Nicolas&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name = <span class="string">&#x27;Smiley&#x27;</span>;</span><br><span class="line">    <span class="built_in">this</span>.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//console.log(this); </span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">this</span>.name); <span class="comment">//&#x27;Smiley&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="built_in">this</span>.sayName, <span class="number">0</span>);     <span class="comment">// 第二次输出,&#x27;Nicolas&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();  </span><br><span class="line">person.sayName();<span class="comment">// &#x27;Smiley&#x27;,&#x27;Nicolas&#x27;</span></span><br><span class="line"><span class="comment">//person.sayname();指向person</span></span><br><span class="line"><span class="comment">//setTimeout 指向window</span></span><br></pre></td></tr></table></figure><p>第三道</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>.length)</span><br><span class="line">&#125;</span><br><span class="line">fn();  <span class="comment">// A window.fn(); 10</span></span><br><span class="line"><span class="keyword">let</span> Person = &#123;</span><br><span class="line">length: <span class="number">5</span>,</span><br><span class="line">say: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">fn();  <span class="comment">// B  隐式调用 默认还是window；10</span></span><br><span class="line"><span class="built_in">arguments</span>[<span class="number">0</span>]();  <span class="comment">// C 1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Person.say(fn);</span><br></pre></td></tr></table></figure><p>第四道</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">num</span>: <span class="number">20</span>&#125;</span><br><span class="line">obj.fn = (<span class="function"><span class="keyword">function</span> (<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.num = num * <span class="number">3</span></span><br><span class="line">  num++</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.num += n</span><br><span class="line">    num++</span><br><span class="line">    <span class="built_in">console</span>.log(num)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)(obj.num)<span class="comment">//自执行函数执行完成之后window.num = 60 ,obj.num= 20,fn种num = 21</span></span><br><span class="line"><span class="comment">// 翻译一下</span></span><br><span class="line"><span class="comment">// obj.fn = function(n)&#123;</span></span><br><span class="line"><span class="comment">//     var num =  21;</span></span><br><span class="line"><span class="comment">//     this.num += n;</span></span><br><span class="line"><span class="comment">//     num++;</span></span><br><span class="line"><span class="comment">//     console.log(num);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fn = obj.fn;<span class="comment">//无输出</span></span><br><span class="line">fn(<span class="number">5</span>);<span class="comment">//this 为windows  window.num = 65 ,console.log(22),obj.num = 20</span></span><br><span class="line">obj.fn(<span class="number">10</span>);<span class="comment">//this 为obj  window.num = 65 ,console.log(23),obj.num = 30</span></span><br><span class="line"><span class="built_in">console</span>.log(num, obj.num)<span class="comment">//console.log(65,30)</span></span><br><span class="line"><span class="comment">// 结果 22 23 65 30</span></span><br></pre></td></tr></table></figure><p>其他题目<a href="https://www.cnblogs.com/xxcanghai/p/5189353.html">一道常被人轻视的前端JS面试题 </a></p><p>另外需要记住的：</p><ul><li>箭头函数没有自己的this，所以指向最近作用的this</li><li>bind，apply,call可以改变this指向</li></ul><h2 id="数组去重的几种方式"><a href="#数组去重的几种方式" class="headerlink" title="数组去重的几种方式"></a>数组去重的几种方式</h2><ul><li>for循环 利用for嵌套for，然后splice去重（ES5中最常用）</li><li>filter</li><li>Set<br>…<br>总结来说就是两个类型</li></ul><p>1.两层循环法<br>2.利用语法自身键不可重复性<br>参考文章<a href="https://juejin.cn/post/6844903602197102605">7种方法实现数组去重</a></p><h2 id="类数组转化为数组"><a href="#类数组转化为数组" class="headerlink" title="类数组转化为数组"></a>类数组转化为数组</h2><p>Array.prototype.slice.call()</p><h2 id="防抖节流"><a href="#防抖节流" class="headerlink" title="防抖节流"></a>防抖节流</h2><p>节流，函数一段时间内只触发一次 //写个滚动分页就能用到了<br>触底加载下一页数据，一定时间内只想触发一次</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//防抖,执行最后一次</span></span><br><span class="line"><span class="comment">//场景实时搜索</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">fn,time</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">timer</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        &#125;</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            fn();</span><br><span class="line">            timer = <span class="literal">null</span>;</span><br><span class="line">        &#125;,time)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//节流，一定时间内，执行第一次</span></span><br><span class="line"><span class="comment">//场景滚动加载，多次点击</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params">fn,time</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="function"><span class="title">if</span>(<span class="params">!flag</span>)</span>&#123;</span><br><span class="line">            fn();</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           flsg = <span class="literal">false</span>;</span><br><span class="line">        &#125;,time)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="闭包（业务中实现场景）"><a href="#闭包（业务中实现场景）" class="headerlink" title="闭包（业务中实现场景）"></a>闭包（业务中实现场景）</h2><p>一个函数能访问另一个函数的作用域就是闭包<br>最简单的闭包就是function 里面再写一个function</p><p>闭包的缺点：</p><ul><li>内存泄漏</li></ul><p>闭包的优点: </p><ul><li>读取函数内部的变量</li><li>创建一个安全的环境，保证内部代码不受到外部的干涉，(实现私有成员，对外只暴露几个接口)</li></ul><p>使用场景：节流防抖就用到了</p><h2 id="跨域问题"><a href="#跨域问题" class="headerlink" title="跨域问题"></a>跨域问题</h2><p>我觉得这个问题挺大的，另开一篇文来写吧<br>已经写了</p><ul><li>jsonp</li><li>iframe</li><li>cors</li><li>nginx<br><a href="%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95.md">文章链接</a></li></ul><h2 id="构造函数、原型和实例"><a href="#构造函数、原型和实例" class="headerlink" title="构造函数、原型和实例"></a>构造函数、原型和实例</h2><p>每个构造函数(Func)都有一个原型对象(Func.prototype)，原型对象包含一个指向构造函数的原型对象的指针(Func.prototype.constructor)，实例(func = new Func())包含一个原型对象的指针(func.<strong>proto</strong>)</p><h2 id="手动实现一个new"><a href="#手动实现一个new" class="headerlink" title="手动实现一个new"></a>手动实现一个new</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyNew</span>(<span class="params">func</span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="title">if</span>(<span class="params"><span class="keyword">typeof</span>(func) !== <span class="string">&quot;function&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;newOperator function the first param must be a function&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>,<span class="number">1</span>);<span class="comment">//获得传入的参数并转为数组</span></span><br><span class="line">    <span class="keyword">var</span> newObj = <span class="built_in">Object</span>.create(func.prototype)<span class="comment">//Object.create(proto，[propertiesObject])</span></span><br><span class="line">    <span class="keyword">var</span> result = func.apply(newObj,arr);</span><br><span class="line">    <span class="keyword">return</span> (result <span class="keyword">instanceof</span> <span class="built_in">Object</span>) ? result:newObj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原型链相关"><a href="#原型链相关" class="headerlink" title="原型链相关"></a>原型链相关</h2><p>MDN的解释</p><blockquote><p>JavaScript 只有一种结构：对象。每个实例对象（object）都有一个私有属性（称之为 __proto__ ）指向它的构造函数的原型对象（prototype）。该原型对象也有一个自己的原型对象（__proto__），层层向上直到一个对象的原型对象为 null。根据定义，null 没有原型，并作为这个原型链中的最后一个环节。</p></blockquote><p>__proto__像一个链接，指向对象的构造函数的prototype,函数才有prototype</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> s = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="keyword">var</span> b = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(foo.__proto__);<span class="comment">//&#123;constructor: ƒ...&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(foo.prototype);<span class="comment">//undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(Foo.prototype === foo.__proto__);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="事件委托（事件捕获和冒泡）"><a href="#事件委托（事件捕获和冒泡）" class="headerlink" title="事件委托（事件捕获和冒泡）"></a>事件委托（事件捕获和冒泡）</h2><p>事件冒泡：事件从最里层元素开始往外发生<br>事件捕获：事件从最外层开始发生，直到最具体的元素<br>一开始觉得这是个什么简单问题，在jquery里面直接用就好了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$(selector).on(event,childSelector,data,function)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJS/jqueryOn.png" alt="描述"></p><p>看了别人的文章之后，发现自己其实只会用，并不清楚其中原理。<br>所以，事件委托到底是个什么东西呢？</p><p>其实就是委托父级代为执行事件，利用的是事件冒泡原理，元素的事件可以冒泡到父级，例如：要让ul里面的li点击事件，最原始的方法就是循环给所有的li增加点击事件，通过委托给ul，只需要在ul上添加一个点击事件即可。<br>委托的优势还有，对于新加入的li节点，点击也可以触发事件。</p><p><a href="https://www.cnblogs.com/liugang-vip/p/5616484.html">这边有一篇讲的很细致的参考博客</a><br>我感觉我这就是一篇博客收集文，😀</p><h2 id="实现继承有哪几种方式"><a href="#实现继承有哪几种方式" class="headerlink" title="实现继承有哪几种方式"></a>实现继承有哪几种方式</h2><h2 id="事件循环机制"><a href="#事件循环机制" class="headerlink" title="事件循环机制"></a>事件循环机制</h2><p>事件循环机制就是JS的执行顺序</p><ul><li>一开始整个脚本作为一个宏任务执行</li><li>执行过程中同步代码直接执行，宏任务进入宏任务队列，微任务进入微任务队列</li><li>当前宏任务执行完出队，检查微任务队列，有则依次执行，直到全部执行完毕</li><li>执行浏览器UI线程的渲染工作</li><li>检查是否有web worker任务，有则执行</li><li>执行完本轮的宏任务，回到2，依次循环，知道宏任务和微任务队列都为空</li></ul><p>先同步再异步，先微再宏<br>宏任务有：script 、setTimeout、setInterval 、setImmediate 、I/O 、UI rendering<br>微任务：MutationObserver、Promise.then()或catch()、Promise为基础开发的其它技术，比如fetch API、V8的垃圾回收过程、Node独有的process.nextTick。<br>微任务是由ES6语法规定的<br>宏任务是由浏览器决定的</p><p>或许[这篇文章的]的题目可以去做做(<a href="https://juejin.cn/post/6844904077537574919">https://juejin.cn/post/6844904077537574919</a>)</p><h2 id="堆内存和栈内存区别"><a href="#堆内存和栈内存区别" class="headerlink" title="堆内存和栈内存区别"></a>堆内存和栈内存区别</h2><p>栈结构：先进后出<br>堆结构：堆是一种经过排序的树形数据结构</p><ul><li>基本类型存在栈内存中，因为基本数据类型占用空间小、大小固定，通过按值来访问，属于被频繁使用的数据，</li><li>引用数据类型在栈中存储在堆内存中，因为引用数据类型大小不固定，占用空间相对较大。<br><a href="https://juejin.cn/post/6844903873992196110">参考文章</a></li></ul><h2 id="call和apply和bind"><a href="#call和apply和bind" class="headerlink" title="call和apply和bind"></a>call和apply和bind</h2><p>共：都可以改变this的指向<br>异：bind返回一个函数，传参是(a,b,c)<br>call传参单个单个(a,b,c)<br>apply传参数组或类数组([a,b,c])<br><a href="https://juejin.cn/post/6844903496253177863">参考文章</a></p><h2 id="输入url之后，到底发生了什么？"><a href="#输入url之后，到底发生了什么？" class="headerlink" title="输入url之后，到底发生了什么？"></a>输入url之后，到底发生了什么？</h2><p>这个问题，很眼熟吧，但是记不住，亏我之前还是网络专业的</p><ul><li><p>1.DNS解析</p></li><li><p>2.建立TCP连接<br><img src="/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJS/tcp.jpg" alt="三次握手 "></p><ul><li>第一次握手：客户端尝试连接服务器，向服务器发送 syn 包（同步序列编号Synchronize Sequence Numbers），syn=j，客户端进入 SYN_SEND 状态等待服务器确认</li><li>第二次握手：服务器接收客户端syn包并确认（ack=j+1），同时向客户端发送一个 SYN包（syn=k），即 SYN+ACK 包，此时服务器进入 SYN_RECV 状态</li><li>第三次握手：第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手</li></ul></li><li><p>3.发送http请求</p></li><li><p>4.接收响应结果</p></li><li><p>5.断开连接</p></li><li><p>6.解析html</p></li><li><p>7.渲染</p><p><img src="/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BJS/url.png" alt="输入url之后，到底发生了什么"></p></li></ul><h2 id="关于HTTP那点事"><a href="#关于HTTP那点事" class="headerlink" title="关于HTTP那点事"></a>关于HTTP那点事</h2><p>这里想要详细了解可以看《图解HTTP》这本书</p><h3 id="HTTP和HTTPS"><a href="#HTTP和HTTPS" class="headerlink" title="HTTP和HTTPS"></a>HTTP和HTTPS</h3><p>超文本传输协议<br>应用层</p><p>可以从下面几个方面来说明HTTP和HTTPS的异同优缺点</p><ul><li>先解释概念  HTTPS就是HTTP+SSL/TLS</li><li>安全 HTTP明文传输   HTTPS加密</li><li>端口 80  443</li><li>证书</li></ul><p>HTTPS的主要作用<br>对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全<br>对服务器进行真实身份认证</p><p>详细说</p><blockquote><p>HTTP 与 HTTPS 区别<br>  HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。<br>  使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。<br>  HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。<br>  http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。<br>  HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。<br>  https = http + ssl<br>  https对传输数据进行加密处理<br>HTTPS 的工作原理<br> <img src="https-intro.png" alt="HTTPS 的工作原理"></p></blockquote><h3 id="HTTP-2"><a href="#HTTP-2" class="headerlink" title="HTTP/2"></a>HTTP/2</h3><p>二进制分帧<br>头部压缩<br>多路复用解决队头阻塞<br>服务器推送<br>请求优先级</p><h3 id="HTTP缓存"><a href="#HTTP缓存" class="headerlink" title="HTTP缓存"></a>HTTP缓存</h3><ul><li><p>协商缓存<br>ETag  Last-Modified</p></li><li><p>强制缓存<br>过期时间Expires Cache-Control</p></li></ul><h3 id="浏览器输入地址后到显示页面经历了什么"><a href="#浏览器输入地址后到显示页面经历了什么" class="headerlink" title="浏览器输入地址后到显示页面经历了什么"></a>浏览器输入地址后到显示页面经历了什么</h3><p>DNS解析<br>建立TCP连接<br>发送HTTP请求<br>服务器响应并返回结果<br>关闭TCP连接<br>渲染页面DOMTree  CSSTree  RanderTree</p><h3 id="DNS缓存"><a href="#DNS缓存" class="headerlink" title="DNS缓存"></a>DNS缓存</h3><p>本地=》逐层查找</p><h3 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h3><p>304命中缓存</p><h3 id="GET和POST的差别"><a href="#GET和POST的差别" class="headerlink" title="GET和POST的差别"></a>GET和POST的差别</h3><p>缓存  get默认会缓存，post的不会缓存<br>参数  get放URL里，短，不安全，post放请求体里,相对安全<br>编码  get ASCII编码，接受的类型少</p><h2 id="重排与重绘"><a href="#重排与重绘" class="headerlink" title="重排与重绘"></a>重排与重绘</h2><p><a href="%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BCSS.md">文章链接</a></p><h2 id="ES6新特性"><a href="#ES6新特性" class="headerlink" title="ES6新特性"></a>ES6新特性</h2><p><a href="https://es6.ruanyifeng.com/">阮一峰的博客</a></p><p>这里只讲几个常见容易记的</p><h3 id="const和let"><a href="#const和let" class="headerlink" title="const和let"></a>const和let</h3><ul><li>const:只读常量<br>  const对象之能使对象的地址不变，对象里面的值控制不了</li><li>let:局部变量<br>  1）只在当前代码块有效<br>  2）不会出现变量提升<br>  3）存在暂时性死区<br>  4）不允许重复声明</li></ul><h3 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的解构赋值</h3><ul><li>形如 let [a,b] = [1,2]</li><li>解构赋值允许指定默认值<br>let[x,y=’2’] = [1]</li><li>应用:值的交换<br>let a =10,b=20;<br>[a,b] = [b,a]</li></ul><h3 id="模板字面量"><a href="#模板字面量" class="headerlink" title="模板字面量"></a>模板字面量</h3><p>这个其实没什么好说的，但我觉得对于我这种写过jquery的人来说，这东西太好了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原来的写法</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;&lt;div&gt;&quot;</span></span><br><span class="line">        +<span class="string">&quot;&lt;span&gt;&quot;</span>+name+<span class="string">&quot;&lt;/span&gt;&quot;</span></span><br><span class="line">        +<span class="string">&quot;&lt;/div&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//多好啊</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">              &lt;span&gt;<span class="subst">$&#123;name&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;`</span>;</span><br></pre></td></tr></table></figure><h3 id="展开运算符"><a href="#展开运算符" class="headerlink" title="展开运算符"></a>展开运算符</h3><p>三个点</p><ul><li>合并数组</li><li>替代apply</li><li>解构赋值</li><li>字符串转数组</li><li>具有 Iterator 接口的对象,转换成数组</li><li>浅拷贝<br><a href="https://www.jianshu.com/p/3935a80342a0">ES6之展开运算符(…)</a></li></ul><h3 id="剩余参数-可变参数"><a href="#剩余参数-可变参数" class="headerlink" title="剩余参数(可变参数)"></a>剩余参数(可变参数)</h3><p>也是三个点<br>用于剩余的将不定数量的参数收集成数组<br>我觉得上面展开运算符的解构赋值就是剩余参数</p><h3 id="ES6箭头函数"><a href="#ES6箭头函数" class="headerlink" title="ES6箭头函数"></a>ES6箭头函数</h3><ul><li>this 指向不能改变</li><li>this指向箭头函数创建词法作用域的this</li></ul><h3 id="默认参数函数"><a href="#默认参数函数" class="headerlink" title="默认参数函数"></a>默认参数函数</h3><ul><li>function test(a=2,b)</li></ul><h3 id="默认值与解构"><a href="#默认值与解构" class="headerlink" title="默认值与解构"></a>默认值与解构</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = <span class="function"><span class="keyword">function</span>(<span class="params">&#123;x=<span class="number">2</span>,y&#125;</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x,y)</span><br><span class="line">&#125;</span><br><span class="line">foo(&#123;<span class="attr">y</span>:<span class="number">10</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第四题：手动实现Promise</span></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">myPromise</span></span>&#123;</span><br><span class="line">     <span class="title">constructor</span> (<span class="params">handle</span>)&#123;</span><br><span class="line">       <span class="function"><span class="title">if</span>(<span class="params"><span class="keyword">typeof</span> handle !== <span class="string">&quot;function&quot;</span></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&#x27;Promise resolver $&#123;executor&#125; is not a function&#x27;</span>)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//记录状态和值的改变</span></span><br><span class="line">       <span class="comment">//初始化值</span></span><br><span class="line">       <span class="built_in">this</span>.value = <span class="literal">null</span> <span class="comment">//终值</span></span><br><span class="line">       <span class="built_in">this</span>.reason = <span class="literal">null</span> <span class="comment">//拒因</span></span><br><span class="line">       <span class="built_in">this</span>.state = <span class="string">&#x27;pending&#x27;</span> <span class="comment">//状态</span></span><br><span class="line">       <span class="keyword">const</span> resolve = <span class="function"><span class="params">value</span> =&gt;</span>&#123;</span><br><span class="line">         <span class="comment">//成功后的一系列操作（状态的改变，成功回调的执行）</span></span><br><span class="line">         <span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">this</span>.state === <span class="string">&#x27;pending&#x27;</span></span>)</span>&#123;</span><br><span class="line">           <span class="comment">//状态进行改变</span></span><br><span class="line">           <span class="built_in">this</span>.state = <span class="string">&#x27;fulfilled&#x27;</span></span><br><span class="line">           <span class="comment">//执行成功的回调，把终值进行赋值</span></span><br><span class="line">           <span class="built_in">this</span>.value = value</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">const</span> reject = <span class="function"><span class="params">reason</span> =&gt;</span>&#123;</span><br><span class="line">           <span class="comment">//失败后的一系列操作（状态的改变，失败回调的执行）</span></span><br><span class="line">           <span class="function"><span class="title">if</span>(<span class="params"><span class="built_in">this</span>.state === <span class="string">&#x27;pending&#x27;</span></span>)</span>&#123;</span><br><span class="line">               <span class="comment">//状态进行改变</span></span><br><span class="line">               <span class="built_in">this</span>.state = <span class="string">&#x27;rejected&#x27;</span></span><br><span class="line">               <span class="comment">//执行成功的回调，把据因进行赋值</span></span><br><span class="line">               <span class="built_in">this</span>.reason = reason</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       executor(resolve,reject)</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="for…of循环"><a href="#for…of循环" class="headerlink" title="for…of循环"></a>for…of循环</h3><p>可迭代类型的数据都可以使用for of循环，不需要通过下标来取值</p><h3 id="类与继承"><a href="#类与继承" class="headerlink" title="类与继承"></a>类与继承</h3><p>这一块比较复杂，再开一篇</p><h3 id="set和map"><a href="#set和map" class="headerlink" title="set和map"></a>set和map</h3><p>set集合。类似数组，但里面的值都是唯一的<br>方法：add,delete,has,clear<br>map字典，类似对象，但是建可以是非字符串类型</p><h3 id="Map和普通对象的区别"><a href="#Map和普通对象的区别" class="headerlink" title="Map和普通对象的区别"></a>Map和普通对象的区别</h3><p>接上面，但是建可以是非字符串类型</p><h3 id="weakset和weakMap"><a href="#weakset和weakMap" class="headerlink" title="weakset和weakMap"></a>weakset和weakMap</h3><p>没整明白</p><h3 id="继承（业务中实现场景）"><a href="#继承（业务中实现场景）" class="headerlink" title="继承（业务中实现场景）"></a>继承（业务中实现场景）</h3><p>继承其实就是考察原型链，比如创建一个数组，可以直接调用数组上的split等方法，就是继承</p><h3 id="Promise如何捕获异常"><a href="#Promise如何捕获异常" class="headerlink" title="Promise如何捕获异常"></a>Promise如何捕获异常</h3><p>.catch</p><h3 id="Promise的resolve的第二个参数的作用"><a href="#Promise的resolve的第二个参数的作用" class="headerlink" title="Promise的resolve的第二个参数的作用"></a>Promise的resolve的第二个参数的作用</h3><p>不明白这个问题</p><h2 id="Vue相关"><a href="#Vue相关" class="headerlink" title="Vue相关"></a>Vue相关</h2><h3 id="1-v-for为何要用key"><a href="#1-v-for为何要用key" class="headerlink" title="1.v-for为何要用key"></a>1.v-for为何要用key</h3><p>使用v-for更新已渲染的元素列表时，默认使用就地复用策略；列表数据修改时，会根据key值去判断某个值是否修改，如果修改，则重新渲染这个值，否则复用之前的元素。</p><ul><li>更准确：因为带 key 就不是就地复用了，在 sameNode 函数 a.key === b.key 对比中可以避免就地复用的情况。所以会更加准确。</li><li>更迅速：利用 key 的唯一性生成 map 对象来获取对应节点，比遍历方式更快</li></ul><h3 id="2-computed和watch的区别"><a href="#2-computed和watch的区别" class="headerlink" title="2.computed和watch的区别"></a>2.computed和watch的区别</h3><p>计算属性computed</p><ul><li>支持缓存，只有依赖数据发生改变，才会重新计算</li><li>不支持异步，当computed中有异步操作时无效，无法监听到数据的改变</li><li>computed默认走缓存，计算属性是基于他们的响应式依赖进行缓存的，也就是基于data中声明过或父组件传递的props中的数据通过计算得到的值</li><li>多对一或一对一，一般用computed</li><li>如果computed属性属性值是函数，那么默认走get方法；函数的返回值就是属性的属性值；在computed中，属性都有get和set方法，当数据改变时，调用set方法</li></ul><p>侦听属性watch</p><ul><li>不支持缓存，数据变，直接触发相应的操作</li><li>watch支持异步</li><li>监听的函数支持接受两个参数，第一个参数是最新的值，第二个参数是输入之前的值</li><li>一般用于一对多</li><li>监听数据必须是data中声明过或父组件传递的props中的数据，当数据变化时，触发其他操作，函数有两个参数<br>immediate：组件加载立即触发回调函数执行<br>deep：深入观察监听器，会一层层往下遍历，给这个对象的所有属性都加上这个监听器，性能开销大，修改对象里的每一个属性都会触发handler</li></ul><h3 id="3-双向绑定原理"><a href="#3-双向绑定原理" class="headerlink" title="3.双向绑定原理"></a>3.双向绑定原理</h3><p>数据劫持结合发布订阅者模式，通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。<br>具体步骤</p><ul><li>1、需要observer的数据对象进行递归遍历，包括子属性对象的属性，都加上setter和getter，这样给对象赋值的时候就可以触发setter，监听数据改变</li><li>2、compile解析模板指令，将模板中的变量替换成数据，然后初始化渲染页面视图，并将每个指令对应的节点绑定更新函数，添加监听数据的订阅者，一旦数据变动，收到通知，更新视图</li><li>3、Watcher订阅者是Observer和Compile之间通信的桥梁，主要做的事情是：<ul><li>1）在自身实例化时往属性订阅器（dep)里面添加自己</li><li>2）自身必须要有一个update方法</li><li>3）待属性变动dep.notice()通知时，能调用自身的updata方法，并触发compile里的回调函数</li><li><ol start="4"><li>MVVM作为数据绑定的入口，整合Observe、Compile和Watcher三者，通过Observer来监听自己model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer和Compile之间的通信桥梁，达到数据变动=》试图更新；视图交互变化=》数据model变更的双向绑定效果</li></ol></li></ul></li></ul><h3 id="4-对MVVM的理解"><a href="#4-对MVVM的理解" class="headerlink" title="4.对MVVM的理解"></a>4.对MVVM的理解</h3><p>Model View ViewModel<br>ViewModel实现数据双向绑定<br>MVVM实现了View和Model的自动同步，当Model的属性改变时，不用再自己手动操作DOM元素，提高了页面渲染性能</p><h3 id="5-v-if和v-show的区别"><a href="#5-v-if和v-show的区别" class="headerlink" title="5.v-if和v-show的区别"></a>5.v-if和v-show的区别</h3><p>频繁切换的使用v-show，否则v-if<br>控制手段：v-show通过css，v-if整个dom的销毁创建<br>编译过程：v-if切换有一个局部编译/卸载的过程，切换过程中合适的销毁和重建内部的事件监听和子组件，v-show只是简单的css切换<br>编译条件：v-if触发组件的生命周期钩子，v-show不会<br><a href="https://vue3js.cn/interview/vue/show_if.html#%E4%B8%89%E3%80%81v-show%E4%B8%8Ev-if%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90">参考文章</a></p><h3 id="6-组件间通信方式"><a href="#6-组件间通信方式" class="headerlink" title="6.组件间通信方式"></a>6.组件间通信方式</h3><p>通信分类</p><ul><li>父子间通信</li><li>兄弟组件</li><li>祖孙后代</li><li>非关系组件</li></ul><table><thead><tr><th align="left">通信方式</th><th align="left">适用场景</th></tr></thead><tbody><tr><td align="left">通过props</td><td align="left">父传子</td></tr><tr><td align="left">通过$emit触发自定义事件</td><td align="left">子传父</td></tr><tr><td align="left">使用ref</td><td align="left">父获取子</td></tr><tr><td align="left">EventBus</td><td align="left">兄弟组件</td></tr><tr><td align="left">$parent $root搭建通信桥梁</td><td align="left">通过共同祖辈$parent或者$root搭建通信桥梁</td></tr><tr><td align="left">$attrs $listeners</td><td align="left">祖先传递数据给子孙</td></tr><tr><td align="left">Provide与inject</td><td align="left">祖先后代，在祖先组件定义provide属性，返回传递的值，在后代组件通过inject接收组件传递过来的值</td></tr><tr><td align="left">VueX</td><td align="left">复杂关系的组件数据传递</td></tr></tbody></table><h3 id="7-项目中如何实现权限的"><a href="#7-项目中如何实现权限的" class="headerlink" title="7.项目中如何实现权限的"></a>7.项目中如何实现权限的</h3><p><a href="https://vue3js.cn/interview/vue/permission.html">参考文章</a></p><h3 id="8-vue生命周期"><a href="#8-vue生命周期" class="headerlink" title="8.vue生命周期"></a>8.vue生命周期</h3><p><a href="vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.md">参考文章</a></p><h3 id="9-nextStick实现原理"><a href="#9-nextStick实现原理" class="headerlink" title="9.nextStick实现原理"></a>9.nextStick实现原理</h3><p><a href="https://vue3js.cn/interview/vue/nexttick.html#%E4%B8%80%E3%80%81nexttick%E6%98%AF%E4%BB%80%E4%B9%88">参考文章</a></p><h3 id="10-vue封装组件需要注意事项"><a href="#10-vue封装组件需要注意事项" class="headerlink" title="10.vue封装组件需要注意事项"></a>10.vue封装组件需要注意事项</h3><p><a href="https://juejin.cn/post/6844903821513064456">参考文章</a></p><h3 id="11-data返回的为什么是一个函数不能是一个对象"><a href="#11-data返回的为什么是一个函数不能是一个对象" class="headerlink" title="11.data返回的为什么是一个函数不能是一个对象"></a>11.data返回的为什么是一个函数不能是一个对象</h3><p>组件复用，如果是对象会污染变量，函数保证了data的私有化<br>为了防止多个组件实例对象之间共用一个data，产生数据污染</p><h3 id="12-v-on可以监听多个方法吗"><a href="#12-v-on可以监听多个方法吗" class="headerlink" title="12.v-on可以监听多个方法吗"></a>12.v-on可以监听多个方法吗</h3><p>可以，顺序执行</p><h3 id="13-v-if和v-for可以一起用吗？为什么？解决方法是什么"><a href="#13-v-if和v-for可以一起用吗？为什么？解决方法是什么" class="headerlink" title="13.v-if和v-for可以一起用吗？为什么？解决方法是什么"></a>13.v-if和v-for可以一起用吗？为什么？解决方法是什么</h3><p>最好不要，v-for优先级高于v-if，增加消耗，解决方法在外面套一层使用v-if</p><h3 id="14-router钩子有哪些"><a href="#14-router钩子有哪些" class="headerlink" title="14.router钩子有哪些"></a>14.router钩子有哪些</h3><p><a href="https://router.vuejs.org/zh/guide/advanced/navigation-guards.html#%E5%85%A8%E5%B1%80%E8%A7%A3%E6%9E%90%E5%AE%88%E5%8D%AB">参考文章</a></p><p>全局守卫 ：每次导航都会触发</p><ul><li>beforeEach :路由跳转前触发</li><li>beforeResolve：在路由跳转前，所有 组件内守卫 和 异步路由组件 被解析之后触发</li><li>afterEach：它发生在路由跳转完成后<br>路由守卫</li><li>beforeEnter：此守卫只在进入路由时触发，在 beforeEach 之后紧随执行<br>组件守卫</li><li>beforeRouterEnter：路由进入组件之前调用，该钩子在全局守卫 beforeEach 和路由守卫 beforeEnter 之后，全局 beforeResolve 和全局 afterEach 之前调用。</li><li>beforeRouterUpdate</li><li>beforeRouterLeave</li></ul><p>使用场景</p><h3 id="15-如何对数组修改实现视图更新"><a href="#15-如何对数组修改实现视图更新" class="headerlink" title="15.如何对数组修改实现视图更新"></a>15.如何对数组修改实现视图更新</h3><p>$set</p><h3 id="16-vuex为什么要区分mutation和action"><a href="#16-vuex为什么要区分mutation和action" class="headerlink" title="16.vuex为什么要区分mutation和action"></a>16.vuex为什么要区分mutation和action</h3><p>action调用异步方法，方便devtool跟踪<br>mutation只能使用同步方法</p><h3 id="17-为何要用slot"><a href="#17-为何要用slot" class="headerlink" title="17.为何要用slot"></a>17.为何要用slot</h3><p>组件的 插槽 是为了让我们封装的组件更具有扩展性 让使用者可以决定组价内部的一些内容到底展示什么</p><h2 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2><h3 id="1-都用过什么功能"><a href="#1-都用过什么功能" class="headerlink" title="1.都用过什么功能"></a>1.都用过什么功能</h3><h3 id="2，用了哪些loader和plugin"><a href="#2，用了哪些loader和plugin" class="headerlink" title="2，用了哪些loader和plugin"></a>2，用了哪些loader和plugin</h3><h3 id="3-loader和plugin的区别是什么"><a href="#3-loader和plugin的区别是什么" class="headerlink" title="3.loader和plugin的区别是什么"></a>3.loader和plugin的区别是什么</h3><h3 id="4-在哪里配置loader和plugin，如何配置"><a href="#4-在哪里配置loader和plugin，如何配置" class="headerlink" title="4.在哪里配置loader和plugin，如何配置"></a>4.在哪里配置loader和plugin，如何配置</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;掘金文章原文&lt;a href=&quot;https://juejin.cn/post/7016593221815910408&quot;&gt;连八股文都不懂还指望在前端混下去么&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;js数据类型&quot;&gt;&lt;a href=&quot;#js数据类型&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="JS" scheme="http://blog.better2020.top/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>CSS基础题</title>
    <link href="http://blog.better2020.top/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BCSS/"/>
    <id>http://blog.better2020.top/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BCSS/</id>
    <published>2021-08-27T06:09:11.000Z</published>
    <updated>2022-04-15T04:15:42.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>之前的那篇面试题有点长了，把css和js分出来吧</p><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p>高频问题<br>基本所有前端开发者都会遇到，日常常见问题，算一个基础问题，然后还能引申到flex布局上，面试上也很好切换问题方向<br>实现方式分几种</p><h3 id="1-基于定位"><a href="#1-基于定位" class="headerlink" title="1. 基于定位"></a>1. 基于定位</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line">      position: relative;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 400px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 方法一 必须知道需要居中的box的宽度 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red;</span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">      height: 100px;</span><br><span class="line"><span class="css">      <span class="selector-tag">top</span><span class="selector-pseudo">:50</span>%;</span></span><br><span class="line">      left: 50%;</span><br><span class="line">      margin-top: -50px;</span><br><span class="line">      margin-left: -50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 方法二  可以不用知道需要居中的box的宽高，但兼容性不好 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red;</span><br><span class="line"><span class="css">      <span class="selector-tag">top</span><span class="selector-pseudo">:50</span>%;</span></span><br><span class="line">      left: 50%;</span><br><span class="line">      transform: translate(-50%,-50%);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 方法三 还是必须需要居中的box有宽高 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red;</span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line">      height: 100px;</span><br><span class="line"><span class="css">      <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">      left: 0;</span><br><span class="line">      bottom: 0;</span><br><span class="line">      right: 0;</span><br><span class="line">      margin: auto;  </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span>&gt;</span>一个三四五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-通过js"><a href="#2-通过js" class="headerlink" title="2. 通过js"></a>2. 通过js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">  &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge&quot;</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    #outBox&#123;</span><br><span class="line">      position: relative;</span><br><span class="line">      width: <span class="number">100</span>%;</span><br><span class="line">      height: <span class="number">400</span>px;</span><br><span class="line">      background:aqua;</span><br><span class="line">      overflow: auto;</span><br><span class="line">    &#125;</span><br><span class="line">    #centerBox&#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      background-color: red; </span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div id=<span class="string">&quot;outBox&quot;</span>&gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;centerBox&quot;</span>&gt;一个三四五&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"> <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> outBox = <span class="built_in">document</span>.getElementById(<span class="string">&quot;outBox&quot;</span>),</span><br><span class="line">        outBoxH = outBox.offsetHeight,</span><br><span class="line">        outBoxW = outBox.offsetWidth,</span><br><span class="line">        centerBox = <span class="built_in">document</span>.getElementById(<span class="string">&quot;centerBox&quot;</span>),</span><br><span class="line">        centerBoxH =centerBox.offsetHeight,</span><br><span class="line">        centerBoxW = centerBox.offsetWidth;</span><br><span class="line">    centerBox.style.marginLeft = (outBoxW-centerBoxW)/<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">    centerBox.style.marginTop = (outBoxH-centerBoxH)/<span class="number">2</span> + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="3-flex布局"><a href="#3-flex布局" class="headerlink" title="3. flex布局"></a>3. flex布局</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      background-color: red; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/*最简单，但也是兼容性问题*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">      width: 800px;</span><br><span class="line">      height: 400px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">    &#125; </span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span>&gt;</span>一个三四五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h2><p>float CSS属性指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动(文档流)中移除，尽管仍然保持部分的流动性（与绝对定位相反）。</p><h3 id="1-触发BFC-即外层div增加属性overflow：hidden"><a href="#1-触发BFC-即外层div增加属性overflow：hidden" class="headerlink" title="1. 触发BFC 即外层div增加属性overflow：hidden"></a>1. 触发BFC 即外层div增加属性overflow：hidden</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* 方法一 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span>&gt;</span>一个三四五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-额外增加标签并设置clear-both"><a href="#2-额外增加标签并设置clear-both" class="headerlink" title="2. 额外增加标签并设置clear:both"></a>2. 额外增加标签并设置clear:both</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* 方法一 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.for-clear-float</span>&#123;</span></span><br><span class="line">      clear: both;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span>&gt;</span>一个三四五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;for-clear-float&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-增加after伪元素"><a href="#3-增加after伪元素" class="headerlink" title="3. 增加after伪元素"></a>3. 增加after伪元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="comment">/* 方法一 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.clear</span>&#123;</span></span><br><span class="line">      *zoom: 1;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/*加在父div上*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.clear</span><span class="selector-pseudo">:after</span>&#123;</span></span><br><span class="line">      content: &quot;&quot;;</span><br><span class="line">      display: block;</span><br><span class="line">      clear: both;</span><br><span class="line">      height: 0;</span><br><span class="line">      visibility: hidden;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span> &gt;</span>一个三四五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-引申思考"><a href="#4-引申思考" class="headerlink" title="4. 引申思考"></a>4. 引申思考</h3><p>1）既然会有高度塌陷问题，那为什么要用float，他干什么用的</p><p>float设计用来做文字环绕效果，这也是他出现高度塌陷的原因，只有高度塌陷了才好实现文字环绕效果<br>具体可以查看博客<a href="https://www.cnblogs.com/duw76/p/10042999.html">CSS布局(四) float详解</a></p><h2 id="关于BFC"><a href="#关于BFC" class="headerlink" title="关于BFC"></a>关于BFC</h2><p>这个问题可以穿插到清除浮动时问。<br>对于BFC，感觉是知其然而不知其所以然，只了解基本概念，比如全称是Block Formatting Context（块格式化上下文），可以清除浮动。<br>却没有详细去了解，今天查看了一下才有一种恍然大悟的感觉</p><p><a href="https://www.cnblogs.com/qs-cnblogs/p/12349887.html">参考博客地址</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">MDN文档地址</a><br>BFC的特性<br>1、属于同一个BFC的两个相邻容器的上下margin会重叠，父子容器margin重叠（重点）<br>2、计算BFC高度时浮动元素也参于计算（重点）<br>3、BFC的区域不会与浮动容器发生重叠（重点）<br>4、BFC内的容器在垂直方向依次排列<br>5、元素的margin-left与其包含块的border-left相接触<br>6、BFC是独立容器，容器内部元素不会影响容器外部元素</p><p>BFC的触发条件<br>1、根元素（html）<br>2、float值非none<br>3、overflow值非visible<br>4、display值为inline-block、table-cell、table-caption、flex、inline-flex<br>5、position值为absolute、fixed</p><p>在验证margin重叠问题时，以下情况会出现margin重叠</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxa&quot;</span>&gt;</span></span><br><span class="line">      boxa</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boxb&quot;</span>&gt;</span></span><br><span class="line">      boxb</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boxa</span>,<span class="selector-class">.boxb</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxa</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: aqua;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.boxb</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: bisque;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BCSS/3-BFC-margin.png" alt="图片"><br>此时我想我触发boxa BFC应该就可以了，然后我在boxa 上添加属性overflow:hidden后没有效果，具体也没查到这个问题，<br>其余博客都是说在boxa外层再加一个div，这个div触发BFC即可。我试了确实成功了…困惑了很久<br>现在我猜测的是根元素是BFC，所以boxa，boxb属于同一个BFC，即使boxa触发了BFC，他们也还是同一个BFC<br>只要再boxa外层在套一个div触发BFC，boxa和boxb才处于不同的BFC。。。<br>但是我通过设置boxa为inline-block来触发BFC，margin又不重叠了………..这下我真的迷惑了，继续找结果，最后在知乎找到了<br>直接放图片了 <img src="/2021/08/27/%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8BCSS/3-margin-collapse.png" alt="关于margin重叠"></p><h2 id="介绍一下标准的css的盒子模型？低版本IE的盒子模型有什么不同"><a href="#介绍一下标准的css的盒子模型？低版本IE的盒子模型有什么不同" class="headerlink" title="介绍一下标准的css的盒子模型？低版本IE的盒子模型有什么不同"></a>介绍一下标准的css的盒子模型？低版本IE的盒子模型有什么不同</h2><p>标准盒模型 content 的宽高为元素的width ，height，一个块的总宽 =  width + padding +border +margin;<br>IE盒模型 content + padding + border 才是元素的width，height，一个块的总宽 =  width + margin;<br>通常开发中，用的多的是IE盒模型</p><h2 id="回流与重绘"><a href="#回流与重绘" class="headerlink" title="回流与重绘"></a>回流与重绘</h2><p>回流必重绘，回流开销大，所以在开发过程中要尽量避免产生回流是性能优化的一个点。</p><ul><li>回流：布局引擎会根据各种样式计算每个盒子在页面上的大小和位置</li><li>重绘：浏览器根据计算好的盒子特性进行绘制<br>产生回流的操作</li><li>添加或删除可见的DOM元素</li><li>元素的位置发生改变</li><li>元素的尺寸发生改变（包括margin、padding，border，width、height）</li><li>内容发生变化，比如文本变化或图片被另一个不同尺寸的图片所替代</li><li>浏览器的窗口尺寸变化（因为回流是根据窗口大小来计算元素的位置和大小的）</li><li>获取一些特定属性的值（例如；OffsetTop,scrollTop/scrollLeft/scrollWidth/scrollHeight,clientHeight,clientWidth，clientLeft,clientTop）</li></ul><p>只产生重绘的操作</p><ul><li>修改颜色</li><li>文本方向</li><li>阴影修改</li></ul><h3 id="减少回流"><a href="#减少回流" class="headerlink" title="减少回流"></a>减少回流</h3><ul><li>如果想设定元素的样式，通过改变元素的 class 类名 (尽可能在 DOM 树的最里层)</li><li>避免设置多项内联样式</li><li>应用元素的动画，使用 position 属性的 fixed 值或 absolute 值(如前文示例所提)</li><li>避免使用 table 布局，table 中每个元素的大小以及内容的改动，都会导致整个 table 的重新计算</li><li>对于那些复杂的动画，对其设置 position: fixed/absolute，尽可能地使元素脱离文档流，从而减少对其他元素的影响</li><li>使用css3硬件加速，可以让transform、opacity、filters这些动画不会引起回流重绘</li><li>避免使用 CSS 的 JavaScript 表达式</li><li>在使用 JavaScript 动态插入多个节点时, 可以使用DocumentFragment. 创建后一次插入. 就能避免多次的渲染性能</li></ul><h2 id="margin重叠问题怎么解决"><a href="#margin重叠问题怎么解决" class="headerlink" title="margin重叠问题怎么解决"></a>margin重叠问题怎么解决</h2><p>原因：同一个BFC中的父子元素或相邻兄弟元素垂直方向上外边距会重叠<br>解决方法：去触发新的BFC，让它们不处在同一BFC中 </p><h2 id="css3新特性"><a href="#css3新特性" class="headerlink" title="css3新特性"></a>css3新特性</h2><h3 id="1-动画-animation"><a href="#1-动画-animation" class="headerlink" title="1. 动画 animation"></a>1. 动画 animation</h3><p>  animation是个缩写属性，包含以下六个属性 默认none 0 ease 0 1 normal<br>  animation-name: keyframe 名称<br>  animation-duration: 完成动画时间<br>  animation-timing-function: 规定动画的速度曲线<br>  animation-delay: 动画开始之前的延迟<br>  animation-iteration-count: 规定动画应该播放的次数<br>  animation-direction: 规定是否应该轮流反向播放动画<br>  例子：实现一个简单的音乐震动条吧</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      width: 800px;</span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line">      justify-content: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      height: 100px;</span><br><span class="line">      width: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span>&#123;</span></span><br><span class="line">      height: 100%;</span><br><span class="line">      width: 100%;</span><br><span class="line">      display: flex;</span><br><span class="line"><span class="css">      <span class="comment">/* flex-direction: column; */</span></span></span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: flex-end;</span><br><span class="line">      padding: 0;</span><br><span class="line">      margin: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">list-style-type</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">      height: 0;</span><br><span class="line">      width: 15px;</span><br><span class="line">      background-color: brown;</span><br><span class="line">      margin: 0 2px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span> <span class="selector-id">#wave</span> <span class="selector-class">.li1</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> <span class="selector-class">.8s</span> <span class="selector-tag">linear</span> 1<span class="selector-tag">s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span> <span class="selector-class">.li2</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.2s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span> <span class="selector-class">.li3</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 2<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.5s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span> <span class="selector-class">.li4</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.5s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#wave</span> <span class="selector-class">.li5</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">animation</span>: <span class="selector-tag">waves</span> 1<span class="selector-class">.5s</span> <span class="selector-tag">linear</span> <span class="selector-class">.5s</span> <span class="selector-tag">infinite</span> <span class="selector-tag">alternate</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> waves&#123;</span></span><br><span class="line">      10% &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:20</span>%</span></span><br><span class="line">      &#125;</span><br><span class="line">      20%&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:60</span>%</span></span><br><span class="line">      &#125;</span><br><span class="line">      40% &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:40</span>%</span></span><br><span class="line">      &#125;</span><br><span class="line">      50% &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%</span></span><br><span class="line">      &#125;</span><br><span class="line">      100%&#123;</span><br><span class="line">        height: 50%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;wave&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;li5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-过渡-transition"><a href="#2-过渡-transition" class="headerlink" title="2. 过渡 transition"></a>2. 过渡 transition</h3><p>  transition: css属性，花费时间，曲线效果，延迟时间(默认0)<br>  引用W3C的例子，鼠标放上去出效果</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#outBox</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background-color</span><span class="selector-pseudo">:aqua</span>;</span></span><br><span class="line">      width: 800px;</span><br><span class="line"><span class="css">      <span class="selector-tag">height</span><span class="selector-pseudo">:400px</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span>&#123;</span></span><br><span class="line">      float: left;</span><br><span class="line">      background-color: red;</span><br><span class="line">      width: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/* transition过渡效果 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-id">#centerBox</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">transition</span>: <span class="selector-tag">width</span>,<span class="selector-class">.5s</span>,<span class="selector-tag">linear</span>,2<span class="selector-tag">s</span>;</span></span><br><span class="line">    &#125; </span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outBox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;centerBox&quot;</span> &gt;</span>鼠标放上来<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-形状转换"><a href="#3-形状转换" class="headerlink" title="3. 形状转换"></a>3. 形状转换</h3><p>translate前面的垂直居中用到过<br>rotate 旋转<br>做一个导航栏悬浮箭头旋转90度的案例，这里设计到自己用css画三角形</p><p>1)css画三角形，利用border实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangle-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangle-down&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;triangle-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实现三角形 */</span></span><br><span class="line">    <span class="selector-id">#triangle-up</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="comment">/* 构造三条边 */</span></span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-right</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">100px</span> solid red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-id">#triangle-down</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="comment">/* 构造三条边 */</span></span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-right</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">100px</span> solid blue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#triangle-left</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="comment">/* 构造三条边 */</span></span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-right</span>: <span class="number">100px</span> solid green;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#triangle-right</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="comment">/* 构造三条边 */</span></span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">100px</span> solid pink;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2)导航栏案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>一级标题<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;triangle-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;sub-title&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.title</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.triangle-right</span>&#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>:<span class="number">6px</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="comment">/* 构造三条边 */</span></span><br><span class="line">      <span class="attribute">border-top</span>: <span class="number">5px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-bottom</span>: <span class="number">5px</span> solid transparent;</span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">10px</span> solid pink;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.sub-title</span>&#123;</span><br><span class="line">      <span class="attribute">visibility</span>: hidden;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#title</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.sub-title</span>&#123;</span><br><span class="line">      <span class="attribute">visibility</span>: visible;</span><br><span class="line">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">      <span class="attribute">transition</span>: opacity,<span class="number">3s</span>,linear,<span class="number">2s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-id">#title</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.triangle-right</span>&#123;</span><br><span class="line">      <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>);</span><br><span class="line">      <span class="attribute">transition</span>: all,.<span class="number">5s</span>,ease,<span class="number">1s</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;之前的那篇面试题有点长了，把css和js分出来吧&lt;/p&gt;
&lt;h2 id=&quot;垂直居中&quot;&gt;&lt;a href=&quot;#垂直居中&quot; class=&quot;head</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="CSS" scheme="http://blog.better2020.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>flex布局</title>
    <link href="http://blog.better2020.top/2021/08/27/flex%E5%B8%83%E5%B1%80/"/>
    <id>http://blog.better2020.top/2021/08/27/flex%E5%B8%83%E5%B1%80/</id>
    <published>2021-08-27T05:27:55.000Z</published>
    <updated>2022-03-18T07:26:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flex-父容器属性"><a href="#Flex-父容器属性" class="headerlink" title="Flex 父容器属性"></a>Flex 父容器属性</h2><h3 id="flex-direction-方向"><a href="#flex-direction-方向" class="headerlink" title="flex-direction 方向"></a>flex-direction 方向</h3><p>value：</p><ul><li>row(default)<ul><li>排列方式从右到左</li></ul></li><li>column<ul><li>排列方式从上到下</li></ul></li><li>row-reverse<ul><li>排列方式从左到右</li></ul></li><li>column-reverse<ul><li>排列方式从下到上</li></ul></li></ul><h3 id="flex-wrap-换行"><a href="#flex-wrap-换行" class="headerlink" title="flex-wrap  换行"></a>flex-wrap  换行</h3><p>value：</p><ul><li>nowrap(default)<ul><li>不换行</li></ul></li><li>wrap<ul><li>换行</li></ul></li><li>wrap-reverse<ul><li>相反的顺序换行</li></ul></li><li>initial<ul><li>设置该属性为它的默认值</li></ul></li><li>inherit<ul><li>从父元素继承</li></ul></li></ul><h3 id="justify-content-主轴上的对齐方式"><a href="#justify-content-主轴上的对齐方式" class="headerlink" title="justify-content  主轴上的对齐方式"></a>justify-content  主轴上的对齐方式</h3><p>value:</p><ul><li>flex-start(default)<ul><li>行首起始位置排列（主轴为row时左对齐）</li></ul></li><li>flex-end<ul><li>行尾排列（主轴为row时右对齐）</li></ul></li><li>center <ul><li>居中</li></ul></li><li>space-between（|div     1     div|）<ul><li>分散对齐，左右顶格分散对齐</li></ul></li><li>space-around<ul><li>分散对齐，子容器左右间隔一致（|1div  2  div1|）</li></ul></li><li>space-evenly<ul><li>分散对齐，均匀分布，容器之间间隔一致（|1 div 1 div 1|）</li></ul></li><li>initial<ul><li>设置该属性为它的默认值</li></ul></li><li>inherit<ul><li>从父元素继承</li></ul></li></ul><h3 id="align-item-交叉轴上的对齐方式"><a href="#align-item-交叉轴上的对齐方式" class="headerlink" title="align-item  交叉轴上的对齐方式"></a>align-item  交叉轴上的对齐方式</h3><p>value:</p><ul><li>stretch (default) <ul><li>元素被拉伸以适应容器，遵照min/max-width/height属性限制</li></ul></li><li>center <ul><li>元素位于容器的中心</li></ul></li><li>flex-start<ul><li>元素位于容器的开头</li></ul></li><li>flex-end<ul><li>元素位于容器的结尾</li></ul></li><li>baseline<ul><li>元素位于容器的基准线</li></ul></li><li>initial<ul><li>设置该属性为它的默认值</li></ul></li><li>inherit<ul><li>从父元素继承</li></ul></li></ul><h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>属性同align-item，用于对齐多行项目，将所有项目看成一个整体</p><h2 id="Flex-子容器属性"><a href="#Flex-子容器属性" class="headerlink" title="Flex 子容器属性"></a>Flex 子容器属性</h2><h3 id="order-排序依据"><a href="#order-排序依据" class="headerlink" title="order  排序依据"></a>order  排序依据</h3><h3 id="flex-grow-扩展"><a href="#flex-grow-扩展" class="headerlink" title="flex-grow   扩展"></a>flex-grow   扩展</h3><h3 id="flex-shrink-缩放"><a href="#flex-shrink-缩放" class="headerlink" title="flex-shrink  缩放"></a>flex-shrink  缩放</h3><h3 id="flex-basis-设置或检索弹性盒伸缩基准值"><a href="#flex-basis-设置或检索弹性盒伸缩基准值" class="headerlink" title="flex-basis  设置或检索弹性盒伸缩基准值"></a>flex-basis  设置或检索弹性盒伸缩基准值</h3><h3 id="flex-flex-grow-flex-shrink-flex-basis的缩写"><a href="#flex-flex-grow-flex-shrink-flex-basis的缩写" class="headerlink" title="flex  flex-grow flex=shrink flex-basis的缩写"></a>flex  flex-grow flex=shrink flex-basis的缩写</h3><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><ul><li>可覆盖align-item的值</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Flex-父容器属性&quot;&gt;&lt;a href=&quot;#Flex-父容器属性&quot; class=&quot;headerlink&quot; title=&quot;Flex 父容器属性&quot;&gt;&lt;/a&gt;Flex 父容器属性&lt;/h2&gt;&lt;h3 id=&quot;flex-direction-方向&quot;&gt;&lt;a href=&quot;#flex</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="CSS" scheme="http://blog.better2020.top/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>hexo 我的博客怎样才能在百度搜索到</title>
    <link href="http://blog.better2020.top/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/"/>
    <id>http://blog.better2020.top/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/</id>
    <published>2021-08-26T05:54:44.000Z</published>
    <updated>2022-03-16T09:21:03.959Z</updated>
    
    <content type="html"><![CDATA[<p>第2天，我的网站还是没被收录<br>第5天，我的网站还是没被收录，开始怀疑自己了</p><hr><p>今天看到博客的阅读量好像只有自己点击的数量，以前以为是标题取得不好，写的也不怎么样所有没有点击量，今天自己到百度精准搜索了自己的博客标题，<br>发现也还是搜不到，我百度了一下，原来还得提交自己的网站给百度收录….</p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>以下内容参考<a href="https://blog.csdn.net/sunshine940326/article/details/70936988/">这篇博客</a>，写的很详细，全部跟下来没什么问题，<br>不过还得等几天才能知道是不是成功了，因为提交到收录需要较一段时间。</p><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>补充几张细节吧，可能是因为与参考博客存在时间差了，有些地方不大一样了，半猜半蒙感觉都对了，记录一下，希望也能帮到别人。</p><h3 id="CNAME验证"><a href="#CNAME验证" class="headerlink" title="CNAME验证"></a>CNAME验证</h3><p>原博未贴出步骤</p><p>1.选择CNAME验证<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/CNAME-1.png" alt="CNAME验证"><br>2.到自己购买的域名下添加相应域名解析<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/CNAME-2.png" alt="添加域名解析"></p><h3 id="链接提交的位置"><a href="#链接提交的位置" class="headerlink" title="链接提交的位置"></a>链接提交的位置</h3><p>原博客，链接提交<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/%E5%8E%9F%E5%8D%9A%E9%93%BE%E6%8E%A5%E6%8F%90%E4%BA%A4.png" alt="原博链接提交"></p><p>我的，资源提交-普通收录<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/%E6%88%91%E7%9A%84%E9%93%BE%E6%8E%A5%E6%8F%90%E4%BA%A4.png" alt="新-收录"></p><h3 id="deploy-位置"><a href="#deploy-位置" class="headerlink" title="deploy 位置"></a>deploy 位置</h3><p>原博<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/deploy.png" alt="原博deploy位置"><br>详细位置配置<br><img src="/2021/08/26/hexo-%E5%8D%9A%E5%AE%A2%E7%99%BE%E5%BA%A6%E6%94%B6%E7%AF%87%E5%BD%95/deploy-1.png" alt="deploy位置"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第2天，我的网站还是没被收录&lt;br&gt;第5天，我的网站还是没被收录，开始怀疑自己了&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;今天看到博客的阅读量好像只有自己点击的数量，以前以为是标题取得不好，写的也不怎么样所有没有点击量，今天自己到百度精准搜索了自己的博客标题，&lt;br&gt;发现也还是搜不到，我</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="hexo" scheme="http://blog.better2020.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>个人简历</title>
    <link href="http://blog.better2020.top/2021/08/25/resume/"/>
    <id>http://blog.better2020.top/2021/08/25/resume/</id>
    <published>2021-08-25T00:13:07.000Z</published>
    <updated>2022-04-15T04:42:41.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><hr style="border:1px solid #000;height:0"><!-- <div style="float:right;" ><img width="100" src="./photo.jpg "></div> --><ul><li>电话号码/微信：15779887084</li><li>QQ:958479953</li><li>邮箱：<a href="mailto:&#57;&#x35;&#56;&#52;&#x37;&#x39;&#x39;&#x35;&#51;&#64;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#109;">&#57;&#x35;&#56;&#52;&#x37;&#x39;&#x39;&#x35;&#51;&#64;&#x71;&#x71;&#x2e;&#x63;&#x6f;&#109;</a></li></ul><h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><hr style="border:1px solid #000;height:0"><ul><li>刘娇阳/女/1997.7</li><li>本科/江西理工大学信息学院网络工程专业/英语四级</li><li>技术博客：<a href="http://blog.better2020.top/">Han’s Blog</a></li><li>个人评价：良好的沟通理解能力与学习能力，干活事事有回应</li></ul><h2 id="个人技能"><a href="#个人技能" class="headerlink" title="个人技能"></a>个人技能</h2><hr style="border:1px solid #000;height:0"><ul><li>熟练使用HTML、CSS、JS、jQuery、Ajax进行功能开发；</li><li>熟练使用SVN、git版本控制工具，进行代码管理，实现敏捷开发；</li><li>熟悉Vue，VueX，axios，能使用脚手架进行开发；</li><li>能进行PC端，移动端网页开发；</li></ul><h2 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h2><hr style="border:1px solid #000;height:0"><h4 id="2019-12-至今-浙江亮鲸网络科技有限公司-web前端开发工程师"><a href="#2019-12-至今-浙江亮鲸网络科技有限公司-web前端开发工程师" class="headerlink" title="2019.12 - 至今 | 浙江亮鲸网络科技有限公司 | web前端开发工程师"></a>2019.12 - 至今 | 浙江亮鲸网络科技有限公司 | web前端开发工程师</h4><p>负责公司ERP与MES的前端开发工作，<b>新需求开发</b>与<b>项目升级重构</b>。</p><ul><li>使用HTML，CSS，LigerUI编写页面，通过优雅降级处理<b>浏览器兼容问题</b>。</li><li>使用jQuery，原生JS实现页面所需交互，<b>JS基础较扎实</b>。</li><li>将系统前后端未分离功能逐步<b>升级为前后端分离模式</b>，并优化性能。</li><li>封装公用方法与插件，并逐步整理成文档，<b>提高开发效率、规范前端团队开发流程</b>。</li></ul><h4 id="2019-7-2019-12-奥克斯空调股份有限公司-WMS开发助理工程师"><a href="#2019-7-2019-12-奥克斯空调股份有限公司-WMS开发助理工程师" class="headerlink" title="2019.7 - 2019.12 | 奥克斯空调股份有限公司 | WMS开发助理工程师"></a>2019.7 - 2019.12 | 奥克斯空调股份有限公司 | WMS开发助理工程师</h4><ul><li>认识工厂智能制造，了解规范开发流程，养成较好的注释及文档编写习惯。</li></ul><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2><hr style="border:1px solid #000;height:0"><p><a href="http://travel.better2020.top/dist/#/">VUE 仿去哪儿网项目移动端</a></p><ul><li>项目使用Vue脚手架开发，布局参考去哪儿网，实现了首页、景点详情、城市选择页面。</li><li>首页swiper轮播功能以及多区域列表的循环展示。</li><li>header封装公用组件，利用slot满足不同模块需求。</li><li>城市选择页面实现城市展示、城市搜索、字母列表联动，VueX共享选中城市。</li><li>景点详情页面使用公用的画廊组件、渐隐渐显的header组件以及递归展示的列表组件。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; class=&quot;headerlink&quot; title=&quot;联系方式&quot;&gt;&lt;/a&gt;联系方式&lt;/h2&gt;&lt;hr style=&quot;border:1px solid #000;height:0&quot;&gt;

&lt;!-- &lt;div style=&quot;flo</summary>
      
    
    
    
    
    <category term="个人简历" scheme="http://blog.better2020.top/tags/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>解决跨域问题的几种方法</title>
    <link href="http://blog.better2020.top/2021/08/23/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.better2020.top/2021/08/23/%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2021-08-23T08:38:23.000Z</published>
    <updated>2022-03-16T09:21:04.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天晚上刷面试视频看到这个问题了，解决跨域的几种方法，其实算个老问题了，不少文章都讲到过，看了好几篇，一直没动手记录，因为感觉没闹懂，直到昨天终于感觉有点悟了。<br>赶紧来尝试记录一下，看自己能不能解释清楚。</p><h2 id="JSONP"><a href="#JSONP" class="headerlink" title="JSONP"></a>JSONP</h2><p>这应该是最早的一种方式解决跨域，通过&lt;script&gt;标签来处理，原理就是利用script标签没有跨域的概念，就像我们通过cdn来引用在线js文件一样，不会有跨域问题。</p><h3 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//本质是这样，但这种只能写死的肯定不行</span></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;../js/SheetOut/SheetOutPopUp.js?t=20210826&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="comment">//所以需要写成方法</span></span><br><span class="line"> &lt;script&gt;</span><br><span class="line">    <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">&#x27;script&#x27;</span>);<span class="comment">//创建script标签</span></span><br><span class="line">    script.type = <span class="string">&#x27;text/javascript&#x27;</span>;<span class="comment">//类型</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传参一个回调函数名给后端，方便后端返回时执行这个在前端定义的回调函数</span></span><br><span class="line">    script.src = <span class="string">&#x27;http://www.domain2.com:8080/login?user=admin&amp;callback=handleCallback&#x27;</span>; </span><br><span class="line">    <span class="built_in">document</span>.head.appendChild(script);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 回调执行函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">handleCallback</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        alert(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">    &#125;</span><br><span class="line"> &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这个需要后台支持，写对应的方法<br>缺点: </p><ol><li>它只支持GET请求而不支持POST等其它类型的HTTP请求</li><li>它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</li><li>jsonp在调用失败的时候不会返回各种HTTP状态码。</li><li>缺点是安全性。万一假如提供jsonp的服务存在页面注入漏洞，即它返回的javascript的内容被人控制的。那么结果是什么？所有调用这个 jsonp的网站都会存在漏洞。于是无法把危险控制在一个域名下…所以在使用jsonp的时候必须要保证使用的jsonp服务必须是安全可信的</li></ol><h2 id="iframe跨域-（感觉很不清晰）"><a href="#iframe跨域-（感觉很不清晰）" class="headerlink" title="iframe跨域 （感觉很不清晰）"></a>iframe跨域 （感觉很不清晰）</h2><p>iframe标签src可以跨域</p><h3 id="主域相同"><a href="#主域相同" class="headerlink" title="主域相同"></a>主域相同</h3><p>document.domain 此方案仅限主域相同，子域不同的跨域应用场景。<br>原理：两个页面都通过js强制设置document.domain为基础主域，就实现了同域。</p><h3 id="主域不同"><a href="#主域不同" class="headerlink" title="主域不同"></a>主域不同</h3><ol><li>location.hash<br>原理：利用location.hash来进行传值,A通过location.hash方式传递参数给B，B通过定时器检测hash变化，执行对应操作，将数据通过location.hash传给C,C与A同域可访问A页面所有对象。</li></ol><p>location.hash缺点</p><ul><li>传递数据量有限</li><li>不太安全</li></ul><ol start="2"><li>window.name + iframe跨域</li></ol><p><a href="https://www.cnblogs.com/RuMengkai/p/6801820.html">一个讲的比较明白的博客</a></p><p>原理：name 值在不同的页面（甚至不同域名）加载后依旧存在</p><ul><li>A.com/A.html想发送请求给B.com/B.html,</li><li>A.html通过创建iframe src = B.com/B.html进行请求</li><li>B.html通过设置name返回数据<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt; window.name = &quot;&#123;\&quot;name\&quot;:\&quot;hanzichi\&quot;, \&quot;age\&quot;:10&#125;&quot;; &lt;/script&gt;&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li>改变A.html的src = A.com/C.html,因为如果页面与iframe src不同源返回了数据也不能操作</li></ul><p>window.name 优势： name 值长（2MB）</p><ol start="3"><li>postMessage</li></ol><p>这里用代码来说明</p><ul><li>1)a.com/index.html中的代码：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe id=<span class="string">&quot;ifr&quot;</span> src=<span class="string">&quot;b.com/index.html&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ifr = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;ifr&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> targetOrigin = <span class="string">&#x27;http://b.com&#x27;</span>;  <span class="comment">// 若写成&#x27;http://b.com/c/proxy.html&#x27;效果一样</span></span><br><span class="line">                                        <span class="comment">// 若写成&#x27;http://c.com&#x27;就不会执行postMessage了</span></span><br><span class="line">    ifr.contentWindow.postMessage(<span class="string">&#x27;I was there!&#x27;</span>, targetOrigin);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li>2)b.com/index.html中的代码：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 通过origin属性判断消息来源地址</span></span><br><span class="line">        <span class="keyword">if</span> (event.origin == <span class="string">&#x27;http://a.com&#x27;</span>) &#123;</span><br><span class="line">            alert(event.data);    <span class="comment">// 弹出&quot;I was there!&quot;</span></span><br><span class="line">            alert(event.source);  <span class="comment">// 对a.com、index.html中window对象的引用</span></span><br><span class="line">                                  <span class="comment">// 但由于同源策略，这里event.source不可以访问window对象</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><p>主要工作实在后台<br>跨域资源共享(CORS) 是一种机制，它使用额外的 HTTP 头来告诉浏览器 让运行在一个 origin (domain) 上的 Web 应用被准许访问来自不同源服务器上的指定的资源。当一个资源从与该资源本身所在的服务器「不同的域、协议或端口」请求一个资源时，资源会发起一个「跨域 HTTP 请求」。<br>缺点：兼容性存在问题</p><p>CORS请求分为两类:简单请求和非简单请求<br>满足以下两个条件为简单请求<br>1)请求方法是以下三种方法之一：</p><ul><li>HEAD</li><li>GET</li><li>POST</li></ul><p>2)HTTP的头信息不超出以下几种字段：</p><ul><li>Accept</li><li>Accept-Language</li><li>Content-Language</li><li>Last-Event-ID</li><li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain<br>不满足为非简单请求</li></ul><h2 id="nginx反向代理"><a href="#nginx反向代理" class="headerlink" title="nginx反向代理"></a>nginx反向代理</h2><p>反向代理（Reverse Proxy）方式是指以代理服务器来接受Internet上的连接请求，然后将请求转发给内部网络上的服务器；并将从服务器上得到的结果返回给Internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器。</p><p>这个现在比较常用,其实就是下载nginx代理进行相关配置就行<br>具体的配置等会去用个例子尝试以下，不然还是记不住</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;昨天晚上刷面试视频看到这个问题了，解决跨域的几种方法，其实算个老问题了，不少文章都讲到过，看了好几篇，一直没动手记录，因为感觉没闹懂，直到昨</summary>
      
    
    
    
    
    <category term="知识点" scheme="http://blog.better2020.top/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客源码提交至github</title>
    <link href="http://blog.better2020.top/2021/06/07/hexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E6%8F%90%E4%BA%A4%E8%87%B3github/"/>
    <id>http://blog.better2020.top/2021/06/07/hexo%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E6%8F%90%E4%BA%A4%E8%87%B3github/</id>
    <published>2021-06-07T00:14:49.000Z</published>
    <updated>2022-03-16T09:21:03.968Z</updated>
    
    <content type="html"><![CDATA[<p>兴致勃勃打开家里电脑写博客，从github把博客文件下载下来整了半天发现没用，原来是之前配置的hexo deploy 只会把博客内容上传到github，源码并没有上传。原来如此！</p><h2 id="博客源码提交到博客仓库的另一个分支进行管理"><a href="#博客源码提交到博客仓库的另一个分支进行管理" class="headerlink" title="博客源码提交到博客仓库的另一个分支进行管理"></a>博客源码提交到博客仓库的另一个分支进行管理</h2><p>博客设置成了github Page，源码经过查阅资料选择了用当前仓库的hexo分支进行保存管理，以后hexo分支为源码，master分支为hexo d生成的文件。</p><h3 id="1-初始化文件夹（已进行初始化可忽略）"><a href="#1-初始化文件夹（已进行初始化可忽略）" class="headerlink" title="1.初始化文件夹（已进行初始化可忽略）"></a>1.初始化文件夹（已进行初始化可忽略）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br></pre></td></tr></table></figure><h3 id="2-关联远程仓库"><a href="#2-关联远程仓库" class="headerlink" title="2.关联远程仓库"></a>2.关联远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:liujiaoy&#x2F;liujiaoy.github.io.git &#x2F;&#x2F;关联远程仓库</span><br></pre></td></tr></table></figure><h3 id="3-创建并切换分支"><a href="#3-创建并切换分支" class="headerlink" title="3.创建并切换分支"></a>3.创建并切换分支</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git switch -c hexo</span><br></pre></td></tr></table></figure><h3 id="4-将源码添加到仓库"><a href="#4-将源码添加到仓库" class="headerlink" title="4.将源码添加到仓库"></a>4.将源码添加到仓库</h3><p>这里由于使用了主题，即包含了主题作者的仓库，添加时会出现问题<br>需要子仓库排除在外再进行提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git rm themes&#x2F;butterfly</span><br><span class="line">git commit -m&quot;提交说明&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="5-此时即可通过正常的git-clone进行项目克隆，但主题的问题仍未解决，我这边还是通过重新安装或主题包来解决的，这个问题还需要持续跟进"><a href="#5-此时即可通过正常的git-clone进行项目克隆，但主题的问题仍未解决，我这边还是通过重新安装或主题包来解决的，这个问题还需要持续跟进" class="headerlink" title="5.此时即可通过正常的git clone进行项目克隆，但主题的问题仍未解决，我这边还是通过重新安装或主题包来解决的，这个问题还需要持续跟进"></a>5.此时即可通过正常的git clone进行项目克隆，但主题的问题仍未解决，我这边还是通过重新安装或主题包来解决的，这个问题还需要持续跟进</h3><p>解决方法（有待验证）：在butterfly主题教程中有看见通过npm方式下载主题包，个人认为此方式应该可以避免项目中存在别人的子仓库的问题，这样克隆安装时通过npm i会直接把包加进来</p><h2 id="其他电脑下载源码进行配置"><a href="#其他电脑下载源码进行配置" class="headerlink" title="其他电脑下载源码进行配置"></a>其他电脑下载源码进行配置</h2><h3 id="1-克隆项目"><a href="#1-克隆项目" class="headerlink" title="1.克隆项目"></a>1.克隆项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:liujiaoy&#x2F;liujiaoy.github.io.git</span><br></pre></td></tr></table></figure><p>此时master分支hexo d生成的文件，开发时需切换至hexo分支</p><h3 id="2-切换分支并安装依赖"><a href="#2-切换分支并安装依赖" class="headerlink" title="2.切换分支并安装依赖"></a>2.切换分支并安装依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git switch hexo</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;butterfly &#x2F;&#x2F;安装主题文件</span><br></pre></td></tr></table></figure><h3 id="3-运行项目发布项目"><a href="#3-运行项目发布项目" class="headerlink" title="3.运行项目发布项目"></a>3.运行项目发布项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;兴致勃勃打开家里电脑写博客，从github把博客文件下载下来整了半天发现没用，原来是之前配置的hexo deploy 只会把博客内容上传到github，源码并没有上传。原来如此！&lt;/p&gt;
&lt;h2 id=&quot;博客源码提交到博客仓库的另一个分支进行管理&quot;&gt;&lt;a href=&quot;#博客</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="Hexo" scheme="http://blog.better2020.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>单个域名与多个github Page关联</title>
    <link href="http://blog.better2020.top/2021/05/24/%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%A4%9A%E4%B8%AAgithub-Page%E5%85%B3%E8%81%94/"/>
    <id>http://blog.better2020.top/2021/05/24/%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%A4%9A%E4%B8%AAgithub-Page%E5%85%B3%E8%81%94/</id>
    <published>2021-05-24T00:52:16.000Z</published>
    <updated>2022-03-16T09:21:04.013Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近在准备简历，于是想把自己的项目都变为所有人可查看，知道可以通过github Pages实现，域名特定为username.gihub.io，之前已实现。但是放在gitHub上的项目有多个，我都想展示怎么实现？之前理解为只能有一个项目能使用githubPage，可是github Pages不可能真的只能展示一个项目吧，搜索了一下真的可以展示多个项目！果然我这种小垃圾遇到的问题，其他人早也遇到过并且解决了。</p><h2 id="正确解读"><a href="#正确解读" class="headerlink" title="正确解读"></a>正确解读</h2><p>这边借用简书上别人文章的段落进行说明，<a href="https://www.jianshu.com/p/556e9b661064">原文链接</a></p><blockquote><p>要发布用户站点，必须创建名为 &lt;user&gt;.github.io 的用户帐户所拥有的仓库。 要发布组织站点，必须创建名为 &lt;organization&gt;.github.io 的组织所拥有的仓库。<br>除非您使用自定义域，否则用户和组织站点位于 http(s)://&lt;username&gt;.github.io 或 http(s)://&lt;organization&gt;.github.io。<br>项目站点的源文件与其项目存储在同一个仓库中。<br>除非您使用自定义域，否则项目站点位于 http(s)://&lt;user&gt;.github.io/&lt;repository&gt; 或 http(s)://&lt;organization&gt;.github.io/&lt;repository&gt;。<br>您只能为每个 GitHub 帐户创建一个用户或组织站点。 项目站点（无论是组织还是用户帐户拥有）没有限制。</p></blockquote><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><h3 id="1-进入github自己的项目仓库，点击相应项目的setting"><a href="#1-进入github自己的项目仓库，点击相应项目的setting" class="headerlink" title="1.进入github自己的项目仓库，点击相应项目的setting"></a>1.进入github自己的项目仓库，点击相应项目的setting</h3><p>如下图 <img src="/2021/05/24/%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%A4%9A%E4%B8%AAgithub-Page%E5%85%B3%E8%81%94/01.png" alt="进入setting"> <center>进入setting</center></p><h3 id="2-找到pages-选择source并save"><a href="#2-找到pages-选择source并save" class="headerlink" title="2.找到pages,选择source并save"></a>2.找到pages,选择source并save</h3><p>如下图<img src="/2021/05/24/%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%A4%9A%E4%B8%AAgithub-Page%E5%85%B3%E8%81%94/02.png" alt="pages配置"> <center>pages配置</center></p><h3 id="3-Custom-domain如果有自己的域名可以填自己的域名"><a href="#3-Custom-domain如果有自己的域名可以填自己的域名" class="headerlink" title="3.Custom domain如果有自己的域名可以填自己的域名"></a>3.Custom domain如果有自己的域名可以填自己的域名</h3><p>例如我的域名为<em>better2020.top</em>,也可以通过cname来创建子域名 travel.better2020.top<br><img src="/2021/05/24/%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E4%B8%8E%E5%A4%9A%E4%B8%AAgithub-Page%E5%85%B3%E8%81%94/03.png" alt="配置域名解析"> <center>配置域名解析</center></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近在准备简历，于是想把自己的项目都变为所有人可查看，知道可以通过github Pages实现，域名特定为username.gihub.io</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="Git" scheme="http://blog.better2020.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>vue v-show状态值改变，视图未更新</title>
    <link href="http://blog.better2020.top/2021/03/31/vue-v-show%E7%8A%B6%E6%80%81%E5%80%BC%E6%94%B9%E5%8F%98%EF%BC%8C%E8%A7%86%E5%9B%BE%E6%9C%AA%E6%9B%B4%E6%96%B0/"/>
    <id>http://blog.better2020.top/2021/03/31/vue-v-show%E7%8A%B6%E6%80%81%E5%80%BC%E6%94%B9%E5%8F%98%EF%BC%8C%E8%A7%86%E5%9B%BE%E6%9C%AA%E6%9B%B4%E6%96%B0/</id>
    <published>2021-03-31T07:46:24.000Z</published>
    <updated>2022-03-16T09:21:03.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>每个父级都有一个点击事件，改变子级的显示隐藏状态,这个状态存放在item对象中<br>核心即为<br>1.子级显示状态值v-show=”item.isshow”<br>2.父级点击事件handleTitleClick，点击改变v-show状态值<br>问题：状态值改变之后视图未更新，<br>原因：直接给对象添加属性不会引起视图改变<br><b>解决：使用this.$set(this.data,’key’,value)</b></p><h2 id="关于Vue-set"><a href="#关于Vue-set" class="headerlink" title="关于Vue.set"></a>关于Vue.set</h2><p><a href="https://cn.vuejs.org/v2/api/#Vue-set">vue官网关于set的文档</a></p><h2 id="附上代码"><a href="#附上代码" class="headerlink" title="附上代码"></a>附上代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class&#x3D;&quot;mp&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;mp-main&quot;&gt;</span><br><span class="line">      &lt;div class&#x3D;&quot;item&quot;</span><br><span class="line">      v-for&#x3D;&quot;(item,index) of mpContent&quot;</span><br><span class="line">      :key&#x3D;&quot;index&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;item-title border-bottom&quot;</span><br><span class="line">          @click&#x3D;&quot;handleTitleClick(item)&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;item-child&quot;</span><br><span class="line">          v-if&#x3D;&quot;item.children&quot;</span><br><span class="line">          v-show&#x3D;&quot;item.isshow&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;detail-container :mpContent&#x3D;&quot;item.children&quot;&gt;&lt;&#x2F;detail-container&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">      &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#39;DetailContainer&#39;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    mpContent: Array</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    &#x2F;&#x2F; console.log(this.mpContent)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleTitleClick (item) &#123;</span><br><span class="line">      &#x2F;&#x2F; item.isshow &#x3D; !(item.isshow &#x3D;&#x3D;&#x3D; undefined ? false : item.isshow)</span><br><span class="line">      this.$set(item, &#39;isshow&#39;, !(item.isshow &#x3D;&#x3D;&#x3D; undefined ? false : item.isshow))</span><br><span class="line">      console.log(item.isshow)</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>对应的数据</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&quot;categoryList&quot;: [&#123;</span><br><span class="line">    &quot;title&quot;: &quot;成人票&quot;,</span><br><span class="line">    &quot;children&quot;: [&#123;</span><br><span class="line">      &quot;title&quot;: &quot;成人三馆联票&quot;,</span><br><span class="line">      &quot;children&quot;: [&#123;</span><br><span class="line">        &quot;title&quot;: &quot;成人三馆联票 - 某一连锁店销售&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      &quot;title&quot;: &quot;成人五馆联票&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    &quot;title&quot;: &quot;学生票&quot;,</span><br><span class="line">    &quot;children&quot;: [&#123;</span><br><span class="line">      &quot;title&quot;: &quot;学生三馆联票&quot;,</span><br><span class="line">      &quot;children&quot;: [&#123;</span><br><span class="line">        &quot;title&quot;: &quot;学生三馆联票 - 某一连锁店销售&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      &quot;title&quot;: &quot;学生五馆联票&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    &quot;title&quot;: &quot;儿童票&quot;,</span><br><span class="line">    &quot;children&quot;: [&#123;</span><br><span class="line">      &quot;title&quot;: &quot;儿童三馆联票&quot;,</span><br><span class="line">      &quot;children&quot;: [&#123;</span><br><span class="line">        &quot;title&quot;: &quot;儿童三馆联票 - 某一连锁店销售&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      &quot;title&quot;: &quot;儿童五馆联票&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    &quot;title&quot;: &quot;特惠票&quot;,</span><br><span class="line">    &quot;children&quot;: [&#123;</span><br><span class="line">      &quot;title&quot;: &quot;特惠三馆联票&quot;,</span><br><span class="line">      &quot;children&quot;: [&#123;</span><br><span class="line">        &quot;title&quot;: &quot;特惠三馆联票 - 某一连锁店销售&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      &quot;title&quot;: &quot;特惠五馆联票&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;]</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">vue列表存在父子关系，在点击父级子级想要呈现toggle模式时遇到困难</summary>
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue项目中引用iconfont</title>
    <link href="http://blog.better2020.top/2021/03/31/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BC%95%E7%94%A8iconfont/"/>
    <id>http://blog.better2020.top/2021/03/31/vue%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BC%95%E7%94%A8iconfont/</id>
    <published>2021-03-31T07:46:24.000Z</published>
    <updated>2022-03-16T09:21:03.998Z</updated>
    
    <content type="html"><![CDATA[<h2 id="官网登录"><a href="#官网登录" class="headerlink" title="官网登录"></a>官网登录</h2><p>官网:<a href="https://www.iconfont.cn/">iconfont</a><br>最好使用github账号登录<br><a href="01.png">登录img</a></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>1.在”资源管理-我的项目“中创建一个项目，命名推荐与vu项目同名<br><a href="02.png">创建项目img</a><br>2.在图标库找你所需要的icon并加入购物车<br>3.购物车的图标添加至项目<br>4.下载项目至本地</p><h2 id="vue项目使用"><a href="#vue项目使用" class="headerlink" title="vue项目使用"></a>vue项目使用</h2><p>解压后讲图标文件放入vue项目相关文件夹中<br><a href="03.png">项目图</a><br>!!注意：iconfont.css中的路径，如上图iconfont.css与其他文件不在同一文件夹，需要修改路径<br><a href="04.png">css路径图</a><br>插入iconfont 代码中<br>解压的文件夹下demo_index.html有非常详细的例子<br>1.使用Unicode<br>2.使用font-class<br>3.Symbol 引用</p>]]></content>
    
    
    <summary type="html">在完善项目时发觉已经忘了怎么使用iconfont了，记录一下</summary>
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="vue" scheme="http://blog.better2020.top/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>固定表头使用方法</title>
    <link href="http://blog.better2020.top/2020/11/20/%E5%9B%BA%E5%AE%9A%E8%A1%A8%E5%A4%B4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.better2020.top/2020/11/20/%E5%9B%BA%E5%AE%9A%E8%A1%A8%E5%A4%B4%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2020-11-20T03:28:33.000Z</published>
    <updated>2022-03-16T09:21:04.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h2><p>1.仅当table父容器高度固定时，table超出父容器范围时可使用<br>例</p><p>2.需要在表头结构加载完成后调用，如后续操作会造成表头结构发生变化(如表头名称改变，行列数量改变)，需再次调用此方法<br>例：ERP考勤查询页面OfficeKaoQing.aspx</p><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><p>引入fixedTableHead.js文件</p><script type="text/javascript" src="../js/fixedTableHead.js?v=20201124"></script><p>$(selector).fixedTableHead({<br>    “TableID”:    ,<br>    “scrollResize”:<br>})</p><h2 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h2><p>TableID：需要固定表头的表格ID<br>scrollResize:滚动时是否重新计算表头列宽，默认重新计算，如果确定表头宽度不会变化的可置为false，减少开销，避免低版本卡顿<br>例：五金领用申请页面，滚动加载   MaterialPicking.aspx<br>调用代码 $(“.MyMainTable”).fixedTableHead({ TableID: “tab”,scrollResize:”true” })</p><p>后续有无法满足的功能可继续拓展参数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用条件&quot;&gt;&lt;a href=&quot;#使用条件&quot; class=&quot;headerlink&quot; title=&quot;使用条件&quot;&gt;&lt;/a&gt;使用条件&lt;/h2&gt;&lt;p&gt;1.仅当table父容器高度固定时，table超出父容器范围时可使用&lt;br&gt;例&lt;/p&gt;
&lt;p&gt;2.需要在表头结构加载完成后调</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="插件使用" scheme="http://blog.better2020.top/tags/%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>hexo安装以及常用指令</title>
    <link href="http://blog.better2020.top/2020/11/03/hexo%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <id>http://blog.better2020.top/2020/11/03/hexo%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</id>
    <published>2020-11-03T05:57:23.000Z</published>
    <updated>2022-03-16T09:21:03.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-安装"><a href="#Hexo-安装" class="headerlink" title="Hexo 安装"></a>Hexo 安装</h2><p>暂未整理</p><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><h3 id="1-新建指令"><a href="#1-新建指令" class="headerlink" title="1.新建指令"></a>1.新建指令</h3><p>新建文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;title&quot; &#x2F;&#x2F;title为文章的标签</span><br><span class="line">&#x2F;&#x2F;等价于</span><br><span class="line">hexo new post &quot;title&quot;</span><br></pre></td></tr></table></figure><p>新建草稿</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new  draft &quot;xxx&quot;</span><br></pre></td></tr></table></figure><p>新建文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;xxx&quot;</span><br></pre></td></tr></table></figure><h3 id="2-开启本地服务器"><a href="#2-开启本地服务器" class="headerlink" title="2.开启本地服务器"></a>2.开启本地服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">&#x2F;&#x2F;等价于</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="3-清除与生成public文件"><a href="#3-清除与生成public文件" class="headerlink" title="3.清除与生成public文件"></a>3.清除与生成public文件</h3><p>一般在修改了配置文件的时候需要执行hexo clean hexo g 再hexo s开启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &#x2F;&#x2F;清除缓存</span><br><span class="line"></span><br><span class="line">hexo g &#x2F;&#x2F;生成文件</span><br></pre></td></tr></table></figure><h3 id="4-部署文件"><a href="#4-部署文件" class="headerlink" title="4.部署文件"></a>4.部署文件</h3><p>将本地数据部署到远端服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="使用图片"><a href="#使用图片" class="headerlink" title="使用图片"></a>使用图片</h2><p>在写博客的时候经常会需要用到图片，下面将hexo怎么引用图片比较方便</p><p>1、安装图片插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>2、修改_config.yml中的一个设置<br>post_asset_folder:true<br>这个设置在new一个博客时创建一个同名文件夹，在这个文件夹中存图片<br>修改博客目录下node_modules\hexo-asset-image\index.js<br><img src="/2020/11/03/hexo%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/bug.png" alt="修改bug"></p><p>3、插入图片语法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">picture1</span>](<span class="link">picture1.JPG</span>)</span><br></pre></td></tr></table></figure><p><a href="test01.png">test01</a></p><p><img src="http://static.runoob.com/images/runoob-logo.png" alt="alt"></p><img src="/2020/11/03/hexo%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/test01.png" width="25%" height="25%">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hexo-安装&quot;&gt;&lt;a href=&quot;#Hexo-安装&quot; class=&quot;headerlink&quot; title=&quot;Hexo 安装&quot;&gt;&lt;/a&gt;Hexo 安装&lt;/h2&gt;&lt;p&gt;暂未整理&lt;/p&gt;
&lt;h2 id=&quot;常用指令&quot;&gt;&lt;a href=&quot;#常用指令&quot; class=&quot;head</summary>
      
    
    
    
    <category term="code" scheme="http://blog.better2020.top/categories/code/"/>
    
    
    <category term="Hexo" scheme="http://blog.better2020.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
